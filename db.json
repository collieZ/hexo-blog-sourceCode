{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/uploads/wechat-qcode.png","path":"uploads/wechat-qcode.png","modified":0,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"4461970a84111e7f6ffa5880f9f532f592f1330d","modified":1603723700657},{"_id":"source/CNAME","hash":"cbc0b39536a31a5ae074664c1146f771b3681f1c","modified":1590727760180},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1548499158105},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1548499158105},{"_id":"themes/next/.DS_Store","hash":"4fadf2d5e7c42585af96a324cde0ef5836876255","modified":1550298298011},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1548499158105},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1548499158106},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1548499158106},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1548499158106},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1548499158106},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1548499158106},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1548499158106},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1548499158107},{"_id":"themes/next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1548499158107},{"_id":"themes/next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1548499158107},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1548499158107},{"_id":"themes/next/_config.yml","hash":"fe26f967758638bf279b967ca7be5066f97f69b5","modified":1550319103271},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1548499158108},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1548499158121},{"_id":"source/_posts/.DS_Store","hash":"a6171698df751c685d6d851200e578fc55977613","modified":1597500256106},{"_id":"source/_posts/blob2pic.md","hash":"c2d763b3236c9611d370a7f10ab8488dc460b46e","modified":1586274822285},{"_id":"source/_posts/react  知识点.md","hash":"986e0480e52b00411d8ed64bc15ddd93bc344976","modified":1595257088881},{"_id":"source/_posts/Nuxt.js  i18n国际化.md","hash":"62c23b6b1dcf5cbc505a812e9575945612fd4c04","modified":1554044905793},{"_id":"source/_posts/css多行文本省略号.md","hash":"b7db4ce14f77257d9d665703761e562636ef593d","modified":1553145582250},{"_id":"source/_posts/不使用 + 、-求两个数的和 （含符号）.md","hash":"39f2427cfcc86ab1e75b6331609dca1c2ca7d006","modified":1592496745534},{"_id":"source/_posts/前端知识点梳理   --part one.md","hash":"aea76b6f40d7b41bae672cc15893f2615fdea3f1","modified":1595258063307},{"_id":"source/_posts/从零开始学习Vue源码(一) —— 概览.md","hash":"45f7a247d4d02da054f4be47152081195bee6824","modified":1595257103800},{"_id":"source/_posts/从零开始学习Vue源码(二) ——响应式基本原理.md","hash":"77c9dba25c4f9f4a33c9b069cd5e70e96ef16974","modified":1595257113870},{"_id":"source/categories/.DS_Store","hash":"45673a8ec47535550c1655fb6f129816c4bf94f9","modified":1550284244751},{"_id":"source/_posts/水波纹动效.md","hash":"a7ff127a4c1be38dea06c2886bbadf1fa65a8247","modified":1595257126375},{"_id":"source/categories/index.md","hash":"4558549e2f1f099e01abcf46a78f3bf81024fe1e","modified":1550287655297},{"_id":"source/tags/.DS_Store","hash":"45673a8ec47535550c1655fb6f129816c4bf94f9","modified":1550286841972},{"_id":"source/tags/index.md","hash":"aebd40e6c1cbe832a607e8db7a365bc97ec07398","modified":1550287663853},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1548499158095},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1548499158097},{"_id":"source/uploads/.DS_Store","hash":"08f86af987013492ab1a74371f3fc8ecbedc2bc9","modified":1550298292999},{"_id":"source/uploads/wechat-qcode.png","hash":"c46829642e2877ed7914a6134aec8dca51e93185","modified":1550288889153},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1548499130849},{"_id":"themes/next/.git/index","hash":"a6190437d74523c2337a5a6539b540652c4dac9d","modified":1585836253699},{"_id":"themes/next/.git/packed-refs","hash":"69237944e31c16fe545d1f47b0b1e5b1d99660da","modified":1548499158091},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1548499158105},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1548499158105},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1548499158105},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1548499158106},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1548499158108},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1548499158108},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1548499158108},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1548499158108},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1548499158109},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1548499158109},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1548499158108},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1548499158109},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1548499158109},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1548499158109},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1548499158109},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1548499158110},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1548499158109},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1548499158110},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1548499158110},{"_id":"themes/next/layout/.DS_Store","hash":"287b3cacef994f9be94a7d7f64b6102f732f287c","modified":1550317316003},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1548499158110},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1548499158111},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1548499158121},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1548499158121},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1548499158121},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1548499158121},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1548499158121},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1548499158122},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1548499158121},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1548499158122},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1548499158121},{"_id":"themes/next/source/.DS_Store","hash":"bc3bec3b6e61098b8760856ce50237b8d2db565b","modified":1550288985750},{"_id":"themes/next/source/404.html","hash":"d6cd47ba4ab178269d9e7be773e521a3f74a738b","modified":1550288483259},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1548499158203},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1548499158202},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1548499158203},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548499158146},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1548499130851},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1548499130849},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1548499130852},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1548499130853},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1548499130850},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1548499130854},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1548499130854},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1548499130850},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1548499130852},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1548499130853},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1548499130848},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1548499130855},{"_id":"themes/next/.git/logs/HEAD","hash":"040e459ccb4e301c71646a45339918e6908b26b8","modified":1548499158096},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1548499158110},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1548499158111},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1548499158110},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1548499158111},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1548499158111},{"_id":"themes/next/layout/_macro/post.swig","hash":"00ca04166bf1d867c0df9e87f47a29faf916eac8","modified":1550298539162},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1548499158112},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1548499158112},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1548499158112},{"_id":"themes/next/layout/_partials/footer.swig","hash":"eca9d5bae1776aab95f46b4d60c39a1a7f5e108e","modified":1550318896009},{"_id":"themes/next/layout/_partials/head.swig","hash":"bdbb4ba7c4f4934ec34972d180f1063f6674e43e","modified":1550318898527},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1548499158113},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1548499158113},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1548499158113},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1548499158113},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1548499158114},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1548499158114},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1548499158115},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1548499158119},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1548499158118},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1548499158119},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1548499158119},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1548499158119},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1548499158119},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1548499158119},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1548499158122},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1548499158122},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1548499158122},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1548499158122},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1548499158123},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1548499158123},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1548499158123},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1548499158123},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1548499158123},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1548499158147},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1548499158145},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1548499158147},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1548499158147},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1548499158148},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1548499158148},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1548499158148},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1548499158148},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1548499158148},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1548499158149},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1548499158149},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1548499158149},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1548499158150},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1548499158150},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1548499158150},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1548499158151},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1548499158151},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1548499158151},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1548499158151},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548499158115},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548499158115},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548499158137},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548499158137},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548499158137},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548499158145},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548499158145},{"_id":"themes/next/.git/refs/heads/master","hash":"7999da428ebb87e5a2b27315d8d5123c1ccdfaa5","modified":1548499158096},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1548499158112},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1548499158112},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1548499158113},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1548499158113},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1548499158113},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1548499158113},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1548499158114},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1548499158114},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1548499158114},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1548499158114},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1548499158115},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1548499158115},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1548499158115},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1548499158115},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1548499158115},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1548499158116},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1548499158116},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1548499158116},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1548499158116},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1548499158116},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1548499158116},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1548499158116},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1548499158117},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1548499158117},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1548499158117},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1548499158117},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1548499158117},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1548499158118},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1548499158117},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1548499158118},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1548499158118},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1548499158118},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1548499158118},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1548499158118},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1548499158120},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1548499158120},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1548499158120},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1548499158120},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1548499158136},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1548499158137},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1548499158137},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1548499158137},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1548499158144},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1548499158145},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1548499158145},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1548499158145},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1548499158152},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1548499158152},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1548499158153},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1548499158152},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1548499158153},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1548499158154},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1548499158154},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1548499158154},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1548499158155},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1548499158155},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1548499158155},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1548499158160},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1548499158163},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1548499158164},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1548499158164},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1548499158164},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1548499158168},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1548499158169},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1548499158169},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1548499158169},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1548499158172},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1548499158171},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1548499158172},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1548499158173},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1548499158174},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1548499158186},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1548499158186},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1548499158187},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1548499158187},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1548499158187},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1548499158187},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1548499158188},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1548499158187},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1548499158188},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1548499158188},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1548499158189},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1548499158189},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1548499158188},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1548499158189},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1548499158189},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1548499158190},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1548499158191},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1548499158191},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1548499158192},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1548499158192},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1548499158192},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1548499158193},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1548499158193},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1548499158193},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1548499158195},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1548499158194},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1548499158194},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1548499158199},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1548499158199},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1548499158202},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1548499158202},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1548499158202},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1548499158186},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1548499158094},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"040e459ccb4e301c71646a45339918e6908b26b8","modified":1548499158096},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1548499158120},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1548499158120},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1548499158123},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1548499158123},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1548499158124},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1548499158124},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1548499158124},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1548499158127},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1548499158130},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1548499158135},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1548499158133},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1548499158134},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1548499158135},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1548499158135},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1548499158136},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1548499158135},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1548499158138},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1548499158138},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1548499158138},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1548499158138},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1548499158139},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1548499158139},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1548499158139},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1548499158139},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1548499158142},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1548499158141},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1548499158142},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1548499158142},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1548499158142},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1548499158143},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1548499158143},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1548499158144},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1548499158143},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1548499158144},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1548499158144},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1548499158154},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1548499158159},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1548499158159},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1548499158164},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1548499158164},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1548499158165},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1548499158165},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1548499158165},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1548499158165},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1548499158167},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1548499158167},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1548499158168},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1548499158170},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1548499158170},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1548499158176},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1548499158175},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1548499158177},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1548499158199},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1548499158198},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1548499158158},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1548499158185},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1548499158185},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1548499158201},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"040e459ccb4e301c71646a45339918e6908b26b8","modified":1548499158094},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1548499158124},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1548499158125},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1548499158125},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1548499158125},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1548499158125},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1548499158126},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1548499158125},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1548499158126},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1548499158125},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1548499158126},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1548499158126},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1548499158127},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1548499158127},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1548499158127},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1548499158127},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1548499158127},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1548499158127},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1548499158128},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1548499158128},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1548499158128},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1548499158128},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1548499158128},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1548499158128},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1548499158128},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1548499158128},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1548499158129},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1548499158129},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1548499158129},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1548499158129},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1548499158129},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1548499158129},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1548499158129},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1548499158130},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1548499158130},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1548499158130},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1548499158130},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1548499158131},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1548499158131},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1548499158132},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1548499158132},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1548499158132},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1548499158132},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1548499158132},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1548499158133},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1548499158133},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1548499158133},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1548499158125},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1548499158126},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1548499158127},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1548499158130},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1548499158130},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1548499158131},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1548499158130},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1548499158130},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1548499158131},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1548499158131},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1548499158141},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1548499158141},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1548499158156},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1548499158156},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1548499158131},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1548499158156},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1548499158131},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1548499158142},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1548499158157},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1548499158159},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1548499158166},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1548499158166},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1548499158166},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1548499158166},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1548499158166},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1548499158167},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1548499158180},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1548499158184},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1548499158178},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1548499158158},{"_id":"themes/next/.git/objects/pack/pack-2e8bfe0bbc40ee78847e36e8d3edd701735c6f4e.idx","hash":"50fb014b44992cfb2c56176f1defd1be870f96b9","modified":1548499158068},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1548499158163},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1548499158198},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1548499158183},{"_id":"themes/next/.git/objects/pack/pack-2e8bfe0bbc40ee78847e36e8d3edd701735c6f4e.pack","hash":"85a7403d5a07a998880356d55082d480ab60cff4","modified":1548499158064},{"_id":"public/search.xml","hash":"78c41d90b8f1de7b089fe71b5aed844dbf8efc87","modified":1604073507333},{"_id":"public/categories/index.html","hash":"7fbc2918fcec563c464f8bcd7f50d0750482dfe9","modified":1604073507349},{"_id":"public/2020/07/20/水波纹动效/index.html","hash":"4eec20e1c1b10de328b90967f77c6bbe3c8d0854","modified":1604073507349},{"_id":"public/tags/index.html","hash":"98e8043741e0188abbc959a356699e7e27c4759a","modified":1604073507350},{"_id":"public/2020/07/01/从零开始学习Vue源码(二) ——响应式基本原理/index.html","hash":"972d026261daf4a023170b1c2007bbbf212c3913","modified":1604073507350},{"_id":"public/2020/07/01/从零开始学习Vue源码(一) —— 概览/index.html","hash":"57dcb0587040f83fbac8c9cfefde9b5f1d8675d6","modified":1604073507350},{"_id":"public/2020/07/01/react  知识点/index.html","hash":"e69f09ccfb9e3ddfd71676c08ef50ef6a65056a6","modified":1604073507350},{"_id":"public/2020/06/19/不使用 + 、-求两个数的和 （含符号）/index.html","hash":"41fa1f8e08d702f71a3c4c1c114490ba083a61d5","modified":1604073507350},{"_id":"public/2020/06/10/前端知识点梳理   --part one/index.html","hash":"f97db7397e6a394a87724913cb2f64b4b68c9c3f","modified":1604073507350},{"_id":"public/2020/04/07/blob2pic/index.html","hash":"aad36a6f29837eb7fd1a8ffbc82e2275b5e26014","modified":1604073507350},{"_id":"public/2019/03/21/css多行文本省略号/index.html","hash":"e2a5553bb3d7e8015987981570c7a3e75472efec","modified":1604073507351},{"_id":"public/2019/03/31/Nuxt.js  i18n国际化/index.html","hash":"4420b5fb6a09ac329cab26d865ff66cbeb7cf4f1","modified":1604073507351},{"_id":"public/archives/2019/index.html","hash":"46294def56fc9622f1c7e1478fc7bb63cec1637d","modified":1604073507351},{"_id":"public/archives/index.html","hash":"626f3aa7b58413fce323e36e39f4c500d6155647","modified":1604073507351},{"_id":"public/archives/2020/index.html","hash":"285ced071b4c5b4ab4bab55f7dc9a09d5e9921f4","modified":1604073507351},{"_id":"public/archives/2019/03/index.html","hash":"6cc32f77aeb096af0d0a6f8875fbf51870dd853d","modified":1604073507351},{"_id":"public/archives/2020/04/index.html","hash":"3e4b8c7f9b624d347e519c6c9856160b33d79c57","modified":1604073507351},{"_id":"public/archives/2020/06/index.html","hash":"35d97d4b948e8405ba3e34cd551cc51778f58475","modified":1604073507351},{"_id":"public/archives/2020/07/index.html","hash":"04a60b1d570b9355911aee10dc97b272162a6c53","modified":1604073507351},{"_id":"public/categories/javascript/index.html","hash":"444106b35a06ecebc80df7d0b4668317acea4cc8","modified":1604073507351},{"_id":"public/categories/css/index.html","hash":"c140439dc9efaeb2ee4e72bce0b443d153cf37dd","modified":1604073507351},{"_id":"public/categories/javascript/react/index.html","hash":"6a9d7c6734ba7124018a397b53116dd57677140f","modified":1604073507351},{"_id":"public/categories/javascript/vue/index.html","hash":"ce86616dab0ed07261525d09a436b26c59c180c8","modified":1604073507351},{"_id":"public/index.html","hash":"34e8eacfccc0f910e7e6557416154e669f9dc5ca","modified":1604073507352},{"_id":"public/tags/react/index.html","hash":"cd073f9085087815650ecfef53eb7da8b0fd95ab","modified":1604073507352},{"_id":"public/tags/i18n/index.html","hash":"a187ea06e6dac9c8c6fd44d274d5c7eb7c874256","modified":1604073507352},{"_id":"public/tags/nuxt/index.html","hash":"20cf9fbcbe08a5e67c7a91f2f22d989ea69eacc9","modified":1604073507352},{"_id":"public/tags/前端/index.html","hash":"a98f97fb13c4c9bcef479954ad3ed6c407b988da","modified":1604073507352},{"_id":"public/tags/css技巧/index.html","hash":"4fecf41f2b396d90a46c7f790b51532f99ec8ce6","modified":1604073507352},{"_id":"public/tags/blob/index.html","hash":"322c2f5f33f410917a90ba5d3cb124d93b86812c","modified":1604073507352},{"_id":"public/tags/summary/index.html","hash":"1482f8c269185e9fa3b34fdfe88a6953285e5f06","modified":1604073507352},{"_id":"public/tags/algorithm/index.html","hash":"a7173632c6294952f1e23400199d0b5983343429","modified":1604073507352},{"_id":"public/tags/vue/index.html","hash":"7edffd53c7d2223f134accf596bb4e5bc45b4c5d","modified":1604073507352},{"_id":"public/tags/css/index.html","hash":"9446befa946273010a1ef8141ae8c9e40a37072c","modified":1604073507352},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1604073507360},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1604073507360},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1604073507360},{"_id":"public/CNAME","hash":"cbc0b39536a31a5ae074664c1146f771b3681f1c","modified":1604073507360},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1604073507360},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1604073507360},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1604073507361},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1604073507361},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1604073507361},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1604073507361},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1604073507361},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1604073507361},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1604073507361},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1604073507361},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1604073507361},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1604073507361},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1604073507361},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1604073507361},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1604073507361},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1604073507361},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1604073507361},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1604073507362},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1604073507362},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1604073507362},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1604073507362},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1604073507362},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1604073507362},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1604073507362},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1604073507362},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1604073507362},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1604073507362},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1604073507362},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1604073507362},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1604073507363},{"_id":"public/uploads/wechat-qcode.png","hash":"c46829642e2877ed7914a6134aec8dca51e93185","modified":1604073507860},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1604073507863},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1604073507870},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1604073507876},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1604073507876},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1604073507876},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1604073507876},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1604073507876},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1604073507876},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1604073507877},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1604073507877},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1604073507877},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1604073507877},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1604073507877},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1604073507877},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1604073507877},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1604073507877},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1604073507877},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1604073507877},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1604073507877},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1604073507877},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1604073507877},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1604073507877},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1604073507877},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1604073507877},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1604073507877},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1604073507877},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1604073507878},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1604073507878},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1604073507878},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1604073507878},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1604073507878},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1604073507878},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1604073507878},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1604073507878},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1604073507879},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1604073507879},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1604073507879},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1604073507879},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1604073507879},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1604073507879},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1604073507879},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1604073507879},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1604073507879},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1604073507879},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1604073507879},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1604073507879},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1604073507879},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1604073507879},{"_id":"public/404.html","hash":"b131af476632738a943170d5949063f8278ac5c1","modified":1604073507879},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1604073507879},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1604073507879},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1604073507880},{"_id":"public/css/main.css","hash":"e4061a15c49f0d1be84af5ac47c662490504f8c1","modified":1604073507880},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1604073507880},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1604073507880},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1604073507880},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1604073507880},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1604073507880},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1604073507880},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1604073507880},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1604073507880},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1604073507880},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1604073507884},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1604073507884},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1604073507885},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1604073507885},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1604073507885},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1604073507885},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1604073507885},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1604073507886},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1604073507886},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1604073507887},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1604073507887},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1604073507887},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1604073507888},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1604073507888},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1604073507976}],"Category":[{"name":"javascript","_id":"ckgwfy6di0004kqulkpfvcg10"},{"name":"css","_id":"ckgwfy6e0000lkquljx5xfwko"},{"name":"react","parent":"ckgwfy6di0004kqulkpfvcg10","_id":"ckgwfy6e1000pkquls1hrcr5t"},{"name":"vue","parent":"ckgwfy6di0004kqulkpfvcg10","_id":"ckgwfy6e2000tkqulcmbew2j3"}],"Data":[],"Page":[{"title":"","date":"2019-02-16T02:28:11.000Z","type":"categories","comments":0,"_content":"\n","source":"categories/index.md","raw":"---\ntitle: \ndate: 2019-02-16 10:28:11\ntype: \"categories\"\ncomments: false\n---\n\n","updated":"2019-02-16T03:27:35.297Z","path":"categories/index.html","layout":"page","_id":"ckgwfy6de0001kqul79baf2kt","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"","date":"2019-02-16T02:27:21.000Z","type":"tags","comments":0,"_content":"\n","source":"tags/index.md","raw":"---\ntitle:  \ndate: 2019-02-16 10:27:21\ntype: \"tags\"\ncomments: false\n---\n\n","updated":"2019-02-16T03:27:43.853Z","path":"tags/index.html","layout":"page","_id":"ckgwfy6dh0003kqulfosola15","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"二进制流转图片","date":"2020-04-07T15:36:23.000Z","_content":"\n**二进制流(ArrayBuffer)转为图片**\n\n1. 首先通过ajax或者ws获取到传来的二进制流数据\n\n\n2. responseType 需要设置为arraybuffer。\n\n3. 然后我们拿到所需的二进制数据， 通过console打印发现是一个ArrayBuffer，接着我们对其进行如下处理，转为base64:\n\n   <!-- more -->\n\n```javascript\n  function arrayBufferToBase64(buffer) {\n\n      var binary = '';\n\n      var bytes = new Uint8Array(buffer);\n\n      var len = bytes.byteLength;\n\n      for (var i = 0; i < len; i++) {\n\n          binary += String.fromCharCode(bytes[i]);\n\n      }\n\n      return window.btoa(binary);\n\n  }\n```\n\n\n\n4. 显示图片。   接着我们把收到的二进制数据通过上面的函数转为url:\n\n``` javascript\nlet url= arrayBufferToBase64(response);\n```\n\n​\t\t\t然后将生成的url放到img标签的src属性中：\n\n```html\ndocument.getElementById('img').src='data:image/jpeg;base64,'+url;\n```\n\n​\t\t\t大功告成～","source":"_posts/blob2pic.md","raw":"---\ntitle: 二进制流转图片\ndate: 2020-04-07 23:36:23\ncategories:\n - javascript\ntags:\n - blob\n---\n\n**二进制流(ArrayBuffer)转为图片**\n\n1. 首先通过ajax或者ws获取到传来的二进制流数据\n\n\n2. responseType 需要设置为arraybuffer。\n\n3. 然后我们拿到所需的二进制数据， 通过console打印发现是一个ArrayBuffer，接着我们对其进行如下处理，转为base64:\n\n   <!-- more -->\n\n```javascript\n  function arrayBufferToBase64(buffer) {\n\n      var binary = '';\n\n      var bytes = new Uint8Array(buffer);\n\n      var len = bytes.byteLength;\n\n      for (var i = 0; i < len; i++) {\n\n          binary += String.fromCharCode(bytes[i]);\n\n      }\n\n      return window.btoa(binary);\n\n  }\n```\n\n\n\n4. 显示图片。   接着我们把收到的二进制数据通过上面的函数转为url:\n\n``` javascript\nlet url= arrayBufferToBase64(response);\n```\n\n​\t\t\t然后将生成的url放到img标签的src属性中：\n\n```html\ndocument.getElementById('img').src='data:image/jpeg;base64,'+url;\n```\n\n​\t\t\t大功告成～","slug":"blob2pic","published":1,"updated":"2020-04-07T15:53:42.285Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgwfy6db0000kqulq3ega3ev","content":"<p><strong>二进制流(ArrayBuffer)转为图片</strong></p>\n<ol>\n<li>首先通过ajax或者ws获取到传来的二进制流数据</li>\n</ol>\n<ol start=\"2\">\n<li><p>responseType 需要设置为arraybuffer。</p>\n</li>\n<li><p>然后我们拿到所需的二进制数据， 通过console打印发现是一个ArrayBuffer，接着我们对其进行如下处理，转为base64:</p>\n<a id=\"more\"></a>\n</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">arrayBufferToBase64</span>(<span class=\"params\">buffer</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> binary = <span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> bytes = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(buffer);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = bytes.byteLength;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        binary += <span class=\"built_in\">String</span>.fromCharCode(bytes[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">window</span>.btoa(binary);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>显示图片。   接着我们把收到的二进制数据通过上面的函数转为url:</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> url= arrayBufferToBase64(response);</span><br></pre></td></tr></table></figure>\n<p>​            然后将生成的url放到img标签的src属性中：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.getElementById('img').src='data:image/jpeg;base64,'+url;</span><br></pre></td></tr></table></figure>\n<p>​            大功告成～</p>\n","site":{"data":{}},"excerpt":"<p><strong>二进制流(ArrayBuffer)转为图片</strong></p>\n<ol>\n<li>首先通过ajax或者ws获取到传来的二进制流数据</li>\n</ol>\n<ol start=\"2\">\n<li><p>responseType 需要设置为arraybuffer。</p>\n</li>\n<li><p>然后我们拿到所需的二进制数据， 通过console打印发现是一个ArrayBuffer，接着我们对其进行如下处理，转为base64:</p>","more":"</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">arrayBufferToBase64</span>(<span class=\"params\">buffer</span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> binary = <span class=\"string\">''</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> bytes = <span class=\"keyword\">new</span> <span class=\"built_in\">Uint8Array</span>(buffer);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = bytes.byteLength;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        binary += <span class=\"built_in\">String</span>.fromCharCode(bytes[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">window</span>.btoa(binary);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>显示图片。   接着我们把收到的二进制数据通过上面的函数转为url:</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> url= arrayBufferToBase64(response);</span><br></pre></td></tr></table></figure>\n<p>​            然后将生成的url放到img标签的src属性中：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">document.getElementById('img').src='data:image/jpeg;base64,'+url;</span><br></pre></td></tr></table></figure>\n<p>​            大功告成～</p>"},{"title":"react hooks知识点","date":"2020-07-01T15:48:23.000Z","_content":"\n## react  知识点(hooks, class)\n\n\n\n### 1. usecallback\n\n\n\n> 缓存函数，依赖项变化后再重新生成.\n>\n> [`useCallback`](https://react.docschina.org/docs/hooks-reference.html#usecallback) Hook 允许你在重新渲染之间保持对相同的回调引用以使得 `shouldComponentUpdate` 继续工作\n>\n> 当缓存的函数依赖项频繁变动的话，可以采用useRef的形式，在 `xxxRef.current` 上把所依赖的变量写入xxxref， usecallback依赖 xxxRef， 因为xxxref只会创建一次，且xxxref.current始终是最新的，所以可以解决依赖项频繁变更的问题并且可以完成函数的缓存。\n\n\n\n<!-- more -->\n\n### 2.memo\n\n\n\n> 子组件 props不变的情况下，父组件重新渲染子组件并**不会**重新渲染\n\n\n\n\n\n### 3. useMemo\n\n\n\n> 缓存值，当依赖项变化时，才会重新计算生成最新值\n\n\n\n\n\n### 4.PureComponent\n\n\n\n> 同memo， 通过class继承的方式实现子组件**不因为**父组件更新而进行不必要的渲染。，只依赖props\n\n\n\n#### 为什么不每个组件都用memo或者pureComponent包装呢？\n\n​\treact决定组件是否更新是根据 **前后props** 来比较的，但比较也仅仅只是**潜比较** ， 只能比较值的不同，如果是引用，比如对象、数组等就无能为力老。 所以，如果props是引用类型，父组件每次更新，传递的引用对象都是新生成的，地址空间已经变了，所以子组件经过潜比较判断前后的prop是不相等的，就会造成子组件重新渲染。 同样， 传递的箭头函数(匿名函数)也会造成相同的后果。 那我们如何规避这种情况呢？\n\n* 拆分props传入的应用对象，拆分为单个的值\n* 函数传入唯一声明的函数引用。 比如在class中传入 <code> xxxxfn.bind(this)</code>的函数\n* 控制更新。 使用class的 `shouldComponentUpdate(prevProps, prevState)`  或者memo的 第二个参数来对前后props进行更深层次的比较，从而控制更新。\n\n\n\n### 5. useReduce\n\n\n\n> [`useReducer`](https://react.docschina.org/docs/hooks-reference.html#usereducer) Hook 减少了对深层传递回调的依赖，\n\n\n\n\n\n\n\n\n\n### 6. useContext\n\n\n\n> 用于解决组件深层次嵌套的通信问题\n\n\n\n","source":"_posts/react  知识点.md","raw":"---\ntitle: react hooks知识点\ndate: 2020-07-01 23:48:23\ncategories:\n - javascript\n - react\ntags:\n - react\n---\n\n## react  知识点(hooks, class)\n\n\n\n### 1. usecallback\n\n\n\n> 缓存函数，依赖项变化后再重新生成.\n>\n> [`useCallback`](https://react.docschina.org/docs/hooks-reference.html#usecallback) Hook 允许你在重新渲染之间保持对相同的回调引用以使得 `shouldComponentUpdate` 继续工作\n>\n> 当缓存的函数依赖项频繁变动的话，可以采用useRef的形式，在 `xxxRef.current` 上把所依赖的变量写入xxxref， usecallback依赖 xxxRef， 因为xxxref只会创建一次，且xxxref.current始终是最新的，所以可以解决依赖项频繁变更的问题并且可以完成函数的缓存。\n\n\n\n<!-- more -->\n\n### 2.memo\n\n\n\n> 子组件 props不变的情况下，父组件重新渲染子组件并**不会**重新渲染\n\n\n\n\n\n### 3. useMemo\n\n\n\n> 缓存值，当依赖项变化时，才会重新计算生成最新值\n\n\n\n\n\n### 4.PureComponent\n\n\n\n> 同memo， 通过class继承的方式实现子组件**不因为**父组件更新而进行不必要的渲染。，只依赖props\n\n\n\n#### 为什么不每个组件都用memo或者pureComponent包装呢？\n\n​\treact决定组件是否更新是根据 **前后props** 来比较的，但比较也仅仅只是**潜比较** ， 只能比较值的不同，如果是引用，比如对象、数组等就无能为力老。 所以，如果props是引用类型，父组件每次更新，传递的引用对象都是新生成的，地址空间已经变了，所以子组件经过潜比较判断前后的prop是不相等的，就会造成子组件重新渲染。 同样， 传递的箭头函数(匿名函数)也会造成相同的后果。 那我们如何规避这种情况呢？\n\n* 拆分props传入的应用对象，拆分为单个的值\n* 函数传入唯一声明的函数引用。 比如在class中传入 <code> xxxxfn.bind(this)</code>的函数\n* 控制更新。 使用class的 `shouldComponentUpdate(prevProps, prevState)`  或者memo的 第二个参数来对前后props进行更深层次的比较，从而控制更新。\n\n\n\n### 5. useReduce\n\n\n\n> [`useReducer`](https://react.docschina.org/docs/hooks-reference.html#usereducer) Hook 减少了对深层传递回调的依赖，\n\n\n\n\n\n\n\n\n\n### 6. useContext\n\n\n\n> 用于解决组件深层次嵌套的通信问题\n\n\n\n","slug":"react  知识点","published":1,"updated":"2020-07-20T14:58:08.881Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgwfy6df0002kqulnyk2mw0y","content":"<h2 id=\"react-知识点-hooks-class\"><a href=\"#react-知识点-hooks-class\" class=\"headerlink\" title=\"react  知识点(hooks, class)\"></a>react  知识点(hooks, class)</h2><h3 id=\"1-usecallback\"><a href=\"#1-usecallback\" class=\"headerlink\" title=\"1. usecallback\"></a>1. usecallback</h3><blockquote>\n<p>缓存函数，依赖项变化后再重新生成.</p>\n<p><a href=\"https://react.docschina.org/docs/hooks-reference.html#usecallback\" target=\"_blank\" rel=\"noopener\"><code>useCallback</code></a> Hook 允许你在重新渲染之间保持对相同的回调引用以使得 <code>shouldComponentUpdate</code> 继续工作</p>\n<p>当缓存的函数依赖项频繁变动的话，可以采用useRef的形式，在 <code>xxxRef.current</code> 上把所依赖的变量写入xxxref， usecallback依赖 xxxRef， 因为xxxref只会创建一次，且xxxref.current始终是最新的，所以可以解决依赖项频繁变更的问题并且可以完成函数的缓存。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"2-memo\"><a href=\"#2-memo\" class=\"headerlink\" title=\"2.memo\"></a>2.memo</h3><blockquote>\n<p>子组件 props不变的情况下，父组件重新渲染子组件并<strong>不会</strong>重新渲染</p>\n</blockquote>\n<h3 id=\"3-useMemo\"><a href=\"#3-useMemo\" class=\"headerlink\" title=\"3. useMemo\"></a>3. useMemo</h3><blockquote>\n<p>缓存值，当依赖项变化时，才会重新计算生成最新值</p>\n</blockquote>\n<h3 id=\"4-PureComponent\"><a href=\"#4-PureComponent\" class=\"headerlink\" title=\"4.PureComponent\"></a>4.PureComponent</h3><blockquote>\n<p>同memo， 通过class继承的方式实现子组件<strong>不因为</strong>父组件更新而进行不必要的渲染。，只依赖props</p>\n</blockquote>\n<h4 id=\"为什么不每个组件都用memo或者pureComponent包装呢？\"><a href=\"#为什么不每个组件都用memo或者pureComponent包装呢？\" class=\"headerlink\" title=\"为什么不每个组件都用memo或者pureComponent包装呢？\"></a>为什么不每个组件都用memo或者pureComponent包装呢？</h4><p>​    react决定组件是否更新是根据 <strong>前后props</strong> 来比较的，但比较也仅仅只是<strong>潜比较</strong> ， 只能比较值的不同，如果是引用，比如对象、数组等就无能为力老。 所以，如果props是引用类型，父组件每次更新，传递的引用对象都是新生成的，地址空间已经变了，所以子组件经过潜比较判断前后的prop是不相等的，就会造成子组件重新渲染。 同样， 传递的箭头函数(匿名函数)也会造成相同的后果。 那我们如何规避这种情况呢？</p>\n<ul>\n<li>拆分props传入的应用对象，拆分为单个的值</li>\n<li>函数传入唯一声明的函数引用。 比如在class中传入 <code> xxxxfn.bind(this)</code>的函数</li>\n<li>控制更新。 使用class的 <code>shouldComponentUpdate(prevProps, prevState)</code>  或者memo的 第二个参数来对前后props进行更深层次的比较，从而控制更新。</li>\n</ul>\n<h3 id=\"5-useReduce\"><a href=\"#5-useReduce\" class=\"headerlink\" title=\"5. useReduce\"></a>5. useReduce</h3><blockquote>\n<p><a href=\"https://react.docschina.org/docs/hooks-reference.html#usereducer\" target=\"_blank\" rel=\"noopener\"><code>useReducer</code></a> Hook 减少了对深层传递回调的依赖，</p>\n</blockquote>\n<h3 id=\"6-useContext\"><a href=\"#6-useContext\" class=\"headerlink\" title=\"6. useContext\"></a>6. useContext</h3><blockquote>\n<p>用于解决组件深层次嵌套的通信问题</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h2 id=\"react-知识点-hooks-class\"><a href=\"#react-知识点-hooks-class\" class=\"headerlink\" title=\"react  知识点(hooks, class)\"></a>react  知识点(hooks, class)</h2><h3 id=\"1-usecallback\"><a href=\"#1-usecallback\" class=\"headerlink\" title=\"1. usecallback\"></a>1. usecallback</h3><blockquote>\n<p>缓存函数，依赖项变化后再重新生成.</p>\n<p><a href=\"https://react.docschina.org/docs/hooks-reference.html#usecallback\" target=\"_blank\" rel=\"noopener\"><code>useCallback</code></a> Hook 允许你在重新渲染之间保持对相同的回调引用以使得 <code>shouldComponentUpdate</code> 继续工作</p>\n<p>当缓存的函数依赖项频繁变动的话，可以采用useRef的形式，在 <code>xxxRef.current</code> 上把所依赖的变量写入xxxref， usecallback依赖 xxxRef， 因为xxxref只会创建一次，且xxxref.current始终是最新的，所以可以解决依赖项频繁变更的问题并且可以完成函数的缓存。</p>\n</blockquote>","more":"<h3 id=\"2-memo\"><a href=\"#2-memo\" class=\"headerlink\" title=\"2.memo\"></a>2.memo</h3><blockquote>\n<p>子组件 props不变的情况下，父组件重新渲染子组件并<strong>不会</strong>重新渲染</p>\n</blockquote>\n<h3 id=\"3-useMemo\"><a href=\"#3-useMemo\" class=\"headerlink\" title=\"3. useMemo\"></a>3. useMemo</h3><blockquote>\n<p>缓存值，当依赖项变化时，才会重新计算生成最新值</p>\n</blockquote>\n<h3 id=\"4-PureComponent\"><a href=\"#4-PureComponent\" class=\"headerlink\" title=\"4.PureComponent\"></a>4.PureComponent</h3><blockquote>\n<p>同memo， 通过class继承的方式实现子组件<strong>不因为</strong>父组件更新而进行不必要的渲染。，只依赖props</p>\n</blockquote>\n<h4 id=\"为什么不每个组件都用memo或者pureComponent包装呢？\"><a href=\"#为什么不每个组件都用memo或者pureComponent包装呢？\" class=\"headerlink\" title=\"为什么不每个组件都用memo或者pureComponent包装呢？\"></a>为什么不每个组件都用memo或者pureComponent包装呢？</h4><p>​    react决定组件是否更新是根据 <strong>前后props</strong> 来比较的，但比较也仅仅只是<strong>潜比较</strong> ， 只能比较值的不同，如果是引用，比如对象、数组等就无能为力老。 所以，如果props是引用类型，父组件每次更新，传递的引用对象都是新生成的，地址空间已经变了，所以子组件经过潜比较判断前后的prop是不相等的，就会造成子组件重新渲染。 同样， 传递的箭头函数(匿名函数)也会造成相同的后果。 那我们如何规避这种情况呢？</p>\n<ul>\n<li>拆分props传入的应用对象，拆分为单个的值</li>\n<li>函数传入唯一声明的函数引用。 比如在class中传入 <code> xxxxfn.bind(this)</code>的函数</li>\n<li>控制更新。 使用class的 <code>shouldComponentUpdate(prevProps, prevState)</code>  或者memo的 第二个参数来对前后props进行更深层次的比较，从而控制更新。</li>\n</ul>\n<h3 id=\"5-useReduce\"><a href=\"#5-useReduce\" class=\"headerlink\" title=\"5. useReduce\"></a>5. useReduce</h3><blockquote>\n<p><a href=\"https://react.docschina.org/docs/hooks-reference.html#usereducer\" target=\"_blank\" rel=\"noopener\"><code>useReducer</code></a> Hook 减少了对深层传递回调的依赖，</p>\n</blockquote>\n<h3 id=\"6-useContext\"><a href=\"#6-useContext\" class=\"headerlink\" title=\"6. useContext\"></a>6. useContext</h3><blockquote>\n<p>用于解决组件深层次嵌套的通信问题</p>\n</blockquote>"},{"title":"Nuxt i18n国际化","date":"2019-03-31T14:17:15.000Z","_content":"\n\n\n# Nuxt.js集成国际化\n\n\n\n##  前言\n\n​\t公司官网需求要加上国际化， 之前官网使用的是vue的 nuxt框架，然后generate生成的静态页面，看了一下，nuxt官方有集成i18n的示例就跟着弄了一下，期间也踩了一些坑。\n\n\n\n<!-- more -->\n\n## 准备工作\n\n### 安装\n\n​\t<code>npm install vue-i18n --save</code>\n\n\n\n### 在nuxt.config.js 中配置\n\n​\t\n\n```javascript\n  plugins: ['~/plugins/i18n.js'],\n\n  router: {\n    middleware: ['i18n']\n  }\n```\n\n### 在plugins文件夹下新建i18n.js\n\n​\t\n\n```javascript\nimport Vue from 'vue'\nimport VueI18n from 'vue-i18n'\n\nVue.use(VueI18n)\n\nexport default ({ app, store }) => {\n  // Set i18n instance on app\n  // This way we can use it in middleware and pages asyncData/fetch\n  app.i18n = new VueI18n({\n    locale: store.state.locale,\n    fallbackLocale: 'cn',\n    messages: {\n      en: require('~/locales/en.json'),\n      cn: require('~/locales/cn.json')\n    }\n  })\n\n  app.i18n.path = link => {\n    if (app.i18n.locale === app.i18n.fallbackLocale) {\n      return `/${link}`\n    }\n\n    return `/${app.i18n.locale}/${link}`\n  }\n}\n\n```\n\n### 在middleware文件夹下新建 i18n.js\n\n​\t \n\n```javascript\nexport default function ({ isHMR, app, store, route, params, error, redirect }) {\n  const defaultLocale = app.i18n.fallbackLocale\n  // If middleware is called from hot module replacement, ignore it\n  if (isHMR) return\n  // Get locale from params\n  // const locale = params.lang || defaultLocale\n  const locale = params.lang || defaultLocale\n  if (store.state.locales.indexOf(locale) === -1) {\n    return error({ message: 'This page could not be found.', statusCode: 404 })\n  }\n  // Set locale\n  store.commit('SET_LANG', locale)\n  app.i18n.locale = store.state.locale\n  // If route is /<defaultLocale>/... -> redirect to /...\n  if (locale === defaultLocale && route.fullPath.indexOf('/' + defaultLocale) === 0) {\n    const toReplace = '^/' + defaultLocale + (route.fullPath.indexOf('/' + defaultLocale + '/') === 0 ? '/' : '')\n    const re = new RegExp(toReplace)\n    return redirect(\n      route.fullPath.replace(re, '/')\n    )\n  }\n}\n\n```\n\n## 创建本地语言库\n\n​\t在根目录下新建文件夹locales， 然后在文件夹下添加你要翻译的语言的json文件 。\n\n### 在store文件夹下新建index.js\n\n​\t\n\n```javascript\nexport const state = () => ({\n  locales: ['en', 'cn'],\n  locale: 'cn'\n})\n\nexport const mutations = {\n  SET_LANG(state, locale) {\n    if (state.locales.indexOf(locale) !== -1) {\n      state.locale = locale\n    }\n  }\n}\n\n```\n\n### 踩坑……\n\n​\t好了，照着官方把该加的都加了，这下就能实现国际化的切换了吧。 然后参考了几篇文章， 通过 <code>**this**.$i18n.locale = Langname</code> 或是\n\n <code>this.$store.commit('SET_LANG', lang)</code> 切换语言。 结果要不就是404， 要不就是一个页面切换了，然后换个页面，也就是切换了路由又变回原来的语言了。。。   \n\n\n\n​\t结果找了好久发现是路由的问题，主要是middleware中的这一段代码:\n\n```javascript\nconst locale = params.lang || defaultLocale\n  if (store.state.locales.indexOf(locale) === -1) {\n    return error({ message: 'This page could not be found.', statusCode: 404 })\n  }\n  // Set locale\n  store.commit('SET_LANG', locale)\n  app.i18n.locale = store.state.locale\n```\n\n每次我们切换页面的时候都会调用这个中间件，然后会去判断路由中的params 如果lang参数有值就将语言设置为对应的值。\n\n​\t 比如我的地址是  \"http://localhost/zn/\" 那么中间件就会将当前的lang设置为zn  如果就是\"http://localhost/\" 就会设置为默认的值.\n\n​\t所以之前我们手动设置了store中的值，切换了路由就会变回原样是因为每次中间件都会把locale设置成默认值(因为我们路由中没有带参数)。\n\n​\t可是当我们路由带上参数后切出现找不到页面的情况，这是因为当前路径下，比如 \"http://localhost/zn/\" 找不到我们的页面。 这是我们就要用到nuxt提供给我们的一个 **动态路由**的功能。 \n\n​\t[动态路由](https://zh.nuxtjs.org/guide/routing#%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1)根据官方可如下配置，因为nuxt是根据page下目录生成路由，可如下组织目录:\n\n![A8CB811A-9DC9-4BB8-8C19-9EFB4ADDA033](https://ws4.sinaimg.cn/large/006tKfTcgy1g1mdn9yi7fj30e40n6jsd.jpg)\n\n_lang 就是动态路由下的参数项，这样不管是带不带参数都能找到页面了。","source":"_posts/Nuxt.js  i18n国际化.md","raw":"---\ntitle: Nuxt i18n国际化\ndate: 2019-03-31 22:17:15\ncategories:\n - javascript\ntags:\n - i18n\n - nuxt\n\n---\n\n\n\n# Nuxt.js集成国际化\n\n\n\n##  前言\n\n​\t公司官网需求要加上国际化， 之前官网使用的是vue的 nuxt框架，然后generate生成的静态页面，看了一下，nuxt官方有集成i18n的示例就跟着弄了一下，期间也踩了一些坑。\n\n\n\n<!-- more -->\n\n## 准备工作\n\n### 安装\n\n​\t<code>npm install vue-i18n --save</code>\n\n\n\n### 在nuxt.config.js 中配置\n\n​\t\n\n```javascript\n  plugins: ['~/plugins/i18n.js'],\n\n  router: {\n    middleware: ['i18n']\n  }\n```\n\n### 在plugins文件夹下新建i18n.js\n\n​\t\n\n```javascript\nimport Vue from 'vue'\nimport VueI18n from 'vue-i18n'\n\nVue.use(VueI18n)\n\nexport default ({ app, store }) => {\n  // Set i18n instance on app\n  // This way we can use it in middleware and pages asyncData/fetch\n  app.i18n = new VueI18n({\n    locale: store.state.locale,\n    fallbackLocale: 'cn',\n    messages: {\n      en: require('~/locales/en.json'),\n      cn: require('~/locales/cn.json')\n    }\n  })\n\n  app.i18n.path = link => {\n    if (app.i18n.locale === app.i18n.fallbackLocale) {\n      return `/${link}`\n    }\n\n    return `/${app.i18n.locale}/${link}`\n  }\n}\n\n```\n\n### 在middleware文件夹下新建 i18n.js\n\n​\t \n\n```javascript\nexport default function ({ isHMR, app, store, route, params, error, redirect }) {\n  const defaultLocale = app.i18n.fallbackLocale\n  // If middleware is called from hot module replacement, ignore it\n  if (isHMR) return\n  // Get locale from params\n  // const locale = params.lang || defaultLocale\n  const locale = params.lang || defaultLocale\n  if (store.state.locales.indexOf(locale) === -1) {\n    return error({ message: 'This page could not be found.', statusCode: 404 })\n  }\n  // Set locale\n  store.commit('SET_LANG', locale)\n  app.i18n.locale = store.state.locale\n  // If route is /<defaultLocale>/... -> redirect to /...\n  if (locale === defaultLocale && route.fullPath.indexOf('/' + defaultLocale) === 0) {\n    const toReplace = '^/' + defaultLocale + (route.fullPath.indexOf('/' + defaultLocale + '/') === 0 ? '/' : '')\n    const re = new RegExp(toReplace)\n    return redirect(\n      route.fullPath.replace(re, '/')\n    )\n  }\n}\n\n```\n\n## 创建本地语言库\n\n​\t在根目录下新建文件夹locales， 然后在文件夹下添加你要翻译的语言的json文件 。\n\n### 在store文件夹下新建index.js\n\n​\t\n\n```javascript\nexport const state = () => ({\n  locales: ['en', 'cn'],\n  locale: 'cn'\n})\n\nexport const mutations = {\n  SET_LANG(state, locale) {\n    if (state.locales.indexOf(locale) !== -1) {\n      state.locale = locale\n    }\n  }\n}\n\n```\n\n### 踩坑……\n\n​\t好了，照着官方把该加的都加了，这下就能实现国际化的切换了吧。 然后参考了几篇文章， 通过 <code>**this**.$i18n.locale = Langname</code> 或是\n\n <code>this.$store.commit('SET_LANG', lang)</code> 切换语言。 结果要不就是404， 要不就是一个页面切换了，然后换个页面，也就是切换了路由又变回原来的语言了。。。   \n\n\n\n​\t结果找了好久发现是路由的问题，主要是middleware中的这一段代码:\n\n```javascript\nconst locale = params.lang || defaultLocale\n  if (store.state.locales.indexOf(locale) === -1) {\n    return error({ message: 'This page could not be found.', statusCode: 404 })\n  }\n  // Set locale\n  store.commit('SET_LANG', locale)\n  app.i18n.locale = store.state.locale\n```\n\n每次我们切换页面的时候都会调用这个中间件，然后会去判断路由中的params 如果lang参数有值就将语言设置为对应的值。\n\n​\t 比如我的地址是  \"http://localhost/zn/\" 那么中间件就会将当前的lang设置为zn  如果就是\"http://localhost/\" 就会设置为默认的值.\n\n​\t所以之前我们手动设置了store中的值，切换了路由就会变回原样是因为每次中间件都会把locale设置成默认值(因为我们路由中没有带参数)。\n\n​\t可是当我们路由带上参数后切出现找不到页面的情况，这是因为当前路径下，比如 \"http://localhost/zn/\" 找不到我们的页面。 这是我们就要用到nuxt提供给我们的一个 **动态路由**的功能。 \n\n​\t[动态路由](https://zh.nuxtjs.org/guide/routing#%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1)根据官方可如下配置，因为nuxt是根据page下目录生成路由，可如下组织目录:\n\n![A8CB811A-9DC9-4BB8-8C19-9EFB4ADDA033](https://ws4.sinaimg.cn/large/006tKfTcgy1g1mdn9yi7fj30e40n6jsd.jpg)\n\n_lang 就是动态路由下的参数项，这样不管是带不带参数都能找到页面了。","slug":"Nuxt.js  i18n国际化","published":1,"updated":"2019-03-31T15:08:25.793Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgwfy6dl0006kqul7sgesb1k","content":"<h1 id=\"Nuxt-js集成国际化\"><a href=\"#Nuxt-js集成国际化\" class=\"headerlink\" title=\"Nuxt.js集成国际化\"></a>Nuxt.js集成国际化</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>​    公司官网需求要加上国际化， 之前官网使用的是vue的 nuxt框架，然后generate生成的静态页面，看了一下，nuxt官方有集成i18n的示例就跟着弄了一下，期间也踩了一些坑。</p>\n<a id=\"more\"></a>\n<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>​    <code>npm install vue-i18n –save</code></p>\n<h3 id=\"在nuxt-config-js-中配置\"><a href=\"#在nuxt-config-js-中配置\" class=\"headerlink\" title=\"在nuxt.config.js 中配置\"></a>在nuxt.config.js 中配置</h3><p>​    </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [<span class=\"string\">'~/plugins/i18n.js'</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">router: &#123;</span><br><span class=\"line\">  middleware: [<span class=\"string\">'i18n'</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"在plugins文件夹下新建i18n-js\"><a href=\"#在plugins文件夹下新建i18n-js\" class=\"headerlink\" title=\"在plugins文件夹下新建i18n.js\"></a>在plugins文件夹下新建i18n.js</h3><p>​    </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> VueI18n <span class=\"keyword\">from</span> <span class=\"string\">'vue-i18n'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(VueI18n)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> (&#123; app, store &#125;) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Set i18n instance on app</span></span><br><span class=\"line\">  <span class=\"comment\">// This way we can use it in middleware and pages asyncData/fetch</span></span><br><span class=\"line\">  app.i18n = <span class=\"keyword\">new</span> VueI18n(&#123;</span><br><span class=\"line\">    locale: store.state.locale,</span><br><span class=\"line\">    fallbackLocale: <span class=\"string\">'cn'</span>,</span><br><span class=\"line\">    messages: &#123;</span><br><span class=\"line\">      en: <span class=\"built_in\">require</span>(<span class=\"string\">'~/locales/en.json'</span>),</span><br><span class=\"line\">      cn: <span class=\"built_in\">require</span>(<span class=\"string\">'~/locales/cn.json'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  app.i18n.path = <span class=\"function\"><span class=\"params\">link</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (app.i18n.locale === app.i18n.fallbackLocale) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">`/<span class=\"subst\">$&#123;link&#125;</span>`</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`/<span class=\"subst\">$&#123;app.i18n.locale&#125;</span>/<span class=\"subst\">$&#123;link&#125;</span>`</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"在middleware文件夹下新建-i18n-js\"><a href=\"#在middleware文件夹下新建-i18n-js\" class=\"headerlink\" title=\"在middleware文件夹下新建 i18n.js\"></a>在middleware文件夹下新建 i18n.js</h3><p>​     </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">&#123; isHMR, app, store, route, params, error, redirect &#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> defaultLocale = app.i18n.fallbackLocale</span><br><span class=\"line\">  <span class=\"comment\">// If middleware is called from hot module replacement, ignore it</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isHMR) <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"comment\">// Get locale from params</span></span><br><span class=\"line\">  <span class=\"comment\">// const locale = params.lang || defaultLocale</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> locale = params.lang || defaultLocale</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (store.state.locales.indexOf(locale) === <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> error(&#123; <span class=\"attr\">message</span>: <span class=\"string\">'This page could not be found.'</span>, <span class=\"attr\">statusCode</span>: <span class=\"number\">404</span> &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// Set locale</span></span><br><span class=\"line\">  store.commit(<span class=\"string\">'SET_LANG'</span>, locale)</span><br><span class=\"line\">  app.i18n.locale = store.state.locale</span><br><span class=\"line\">  <span class=\"comment\">// If route is /&lt;defaultLocale&gt;/... -&gt; redirect to /...</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (locale === defaultLocale &amp;&amp; route.fullPath.indexOf(<span class=\"string\">'/'</span> + defaultLocale) === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> toReplace = <span class=\"string\">'^/'</span> + defaultLocale + (route.fullPath.indexOf(<span class=\"string\">'/'</span> + defaultLocale + <span class=\"string\">'/'</span>) === <span class=\"number\">0</span> ? <span class=\"string\">'/'</span> : <span class=\"string\">''</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> re = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(toReplace)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> redirect(</span><br><span class=\"line\">      route.fullPath.replace(re, <span class=\"string\">'/'</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建本地语言库\"><a href=\"#创建本地语言库\" class=\"headerlink\" title=\"创建本地语言库\"></a>创建本地语言库</h2><p>​    在根目录下新建文件夹locales， 然后在文件夹下添加你要翻译的语言的json文件 。</p>\n<h3 id=\"在store文件夹下新建index-js\"><a href=\"#在store文件夹下新建index-js\" class=\"headerlink\" title=\"在store文件夹下新建index.js\"></a>在store文件夹下新建index.js</h3><p>​    </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> state = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (&#123;</span><br><span class=\"line\">  locales: [<span class=\"string\">'en'</span>, <span class=\"string\">'cn'</span>],</span><br><span class=\"line\">  locale: <span class=\"string\">'cn'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> mutations = &#123;</span><br><span class=\"line\">  SET_LANG(state, locale) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (state.locales.indexOf(locale) !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      state.locale = locale</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"踩坑……\"><a href=\"#踩坑……\" class=\"headerlink\" title=\"踩坑……\"></a>踩坑……</h3><p>​    好了，照着官方把该加的都加了，这下就能实现国际化的切换了吧。 然后参考了几篇文章， 通过 <code><strong>this</strong>.$i18n.locale = Langname</code> 或是</p>\n<p> <code>this.$store.commit(‘SET_LANG’, lang)</code> 切换语言。 结果要不就是404， 要不就是一个页面切换了，然后换个页面，也就是切换了路由又变回原来的语言了。。。   </p>\n<p>​    结果找了好久发现是路由的问题，主要是middleware中的这一段代码:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> locale = params.lang || defaultLocale</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (store.state.locales.indexOf(locale) === <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> error(&#123; <span class=\"attr\">message</span>: <span class=\"string\">'This page could not be found.'</span>, <span class=\"attr\">statusCode</span>: <span class=\"number\">404</span> &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// Set locale</span></span><br><span class=\"line\">  store.commit(<span class=\"string\">'SET_LANG'</span>, locale)</span><br><span class=\"line\">  app.i18n.locale = store.state.locale</span><br></pre></td></tr></table></figure>\n<p>每次我们切换页面的时候都会调用这个中间件，然后会去判断路由中的params 如果lang参数有值就将语言设置为对应的值。</p>\n<p>​     比如我的地址是  “<a href=\"http://localhost/zn/&quot;\" target=\"_blank\" rel=\"noopener\">http://localhost/zn/&quot;</a> 那么中间件就会将当前的lang设置为zn  如果就是”<a href=\"http://localhost/&quot;\" target=\"_blank\" rel=\"noopener\">http://localhost/&quot;</a> 就会设置为默认的值.</p>\n<p>​    所以之前我们手动设置了store中的值，切换了路由就会变回原样是因为每次中间件都会把locale设置成默认值(因为我们路由中没有带参数)。</p>\n<p>​    可是当我们路由带上参数后切出现找不到页面的情况，这是因为当前路径下，比如 “<a href=\"http://localhost/zn/&quot;\" target=\"_blank\" rel=\"noopener\">http://localhost/zn/&quot;</a> 找不到我们的页面。 这是我们就要用到nuxt提供给我们的一个 <strong>动态路由</strong>的功能。 </p>\n<p>​    <a href=\"https://zh.nuxtjs.org/guide/routing#%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1\" target=\"_blank\" rel=\"noopener\">动态路由</a>根据官方可如下配置，因为nuxt是根据page下目录生成路由，可如下组织目录:</p>\n<p><img src=\"https://ws4.sinaimg.cn/large/006tKfTcgy1g1mdn9yi7fj30e40n6jsd.jpg\" alt=\"A8CB811A-9DC9-4BB8-8C19-9EFB4ADDA033\"></p>\n<p>_lang 就是动态路由下的参数项，这样不管是带不带参数都能找到页面了。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Nuxt-js集成国际化\"><a href=\"#Nuxt-js集成国际化\" class=\"headerlink\" title=\"Nuxt.js集成国际化\"></a>Nuxt.js集成国际化</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>​    公司官网需求要加上国际化， 之前官网使用的是vue的 nuxt框架，然后generate生成的静态页面，看了一下，nuxt官方有集成i18n的示例就跟着弄了一下，期间也踩了一些坑。</p>","more":"<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>​    <code>npm install vue-i18n –save</code></p>\n<h3 id=\"在nuxt-config-js-中配置\"><a href=\"#在nuxt-config-js-中配置\" class=\"headerlink\" title=\"在nuxt.config.js 中配置\"></a>在nuxt.config.js 中配置</h3><p>​    </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [<span class=\"string\">'~/plugins/i18n.js'</span>],</span><br><span class=\"line\"></span><br><span class=\"line\">router: &#123;</span><br><span class=\"line\">  middleware: [<span class=\"string\">'i18n'</span>]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"在plugins文件夹下新建i18n-js\"><a href=\"#在plugins文件夹下新建i18n-js\" class=\"headerlink\" title=\"在plugins文件夹下新建i18n.js\"></a>在plugins文件夹下新建i18n.js</h3><p>​    </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> VueI18n <span class=\"keyword\">from</span> <span class=\"string\">'vue-i18n'</span></span><br><span class=\"line\"></span><br><span class=\"line\">Vue.use(VueI18n)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> (&#123; app, store &#125;) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"comment\">// Set i18n instance on app</span></span><br><span class=\"line\">  <span class=\"comment\">// This way we can use it in middleware and pages asyncData/fetch</span></span><br><span class=\"line\">  app.i18n = <span class=\"keyword\">new</span> VueI18n(&#123;</span><br><span class=\"line\">    locale: store.state.locale,</span><br><span class=\"line\">    fallbackLocale: <span class=\"string\">'cn'</span>,</span><br><span class=\"line\">    messages: &#123;</span><br><span class=\"line\">      en: <span class=\"built_in\">require</span>(<span class=\"string\">'~/locales/en.json'</span>),</span><br><span class=\"line\">      cn: <span class=\"built_in\">require</span>(<span class=\"string\">'~/locales/cn.json'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  app.i18n.path = <span class=\"function\"><span class=\"params\">link</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (app.i18n.locale === app.i18n.fallbackLocale) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">`/<span class=\"subst\">$&#123;link&#125;</span>`</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">`/<span class=\"subst\">$&#123;app.i18n.locale&#125;</span>/<span class=\"subst\">$&#123;link&#125;</span>`</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"在middleware文件夹下新建-i18n-js\"><a href=\"#在middleware文件夹下新建-i18n-js\" class=\"headerlink\" title=\"在middleware文件夹下新建 i18n.js\"></a>在middleware文件夹下新建 i18n.js</h3><p>​     </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">&#123; isHMR, app, store, route, params, error, redirect &#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> defaultLocale = app.i18n.fallbackLocale</span><br><span class=\"line\">  <span class=\"comment\">// If middleware is called from hot module replacement, ignore it</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isHMR) <span class=\"keyword\">return</span></span><br><span class=\"line\">  <span class=\"comment\">// Get locale from params</span></span><br><span class=\"line\">  <span class=\"comment\">// const locale = params.lang || defaultLocale</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> locale = params.lang || defaultLocale</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (store.state.locales.indexOf(locale) === <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> error(&#123; <span class=\"attr\">message</span>: <span class=\"string\">'This page could not be found.'</span>, <span class=\"attr\">statusCode</span>: <span class=\"number\">404</span> &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// Set locale</span></span><br><span class=\"line\">  store.commit(<span class=\"string\">'SET_LANG'</span>, locale)</span><br><span class=\"line\">  app.i18n.locale = store.state.locale</span><br><span class=\"line\">  <span class=\"comment\">// If route is /&lt;defaultLocale&gt;/... -&gt; redirect to /...</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (locale === defaultLocale &amp;&amp; route.fullPath.indexOf(<span class=\"string\">'/'</span> + defaultLocale) === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> toReplace = <span class=\"string\">'^/'</span> + defaultLocale + (route.fullPath.indexOf(<span class=\"string\">'/'</span> + defaultLocale + <span class=\"string\">'/'</span>) === <span class=\"number\">0</span> ? <span class=\"string\">'/'</span> : <span class=\"string\">''</span>)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> re = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(toReplace)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> redirect(</span><br><span class=\"line\">      route.fullPath.replace(re, <span class=\"string\">'/'</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建本地语言库\"><a href=\"#创建本地语言库\" class=\"headerlink\" title=\"创建本地语言库\"></a>创建本地语言库</h2><p>​    在根目录下新建文件夹locales， 然后在文件夹下添加你要翻译的语言的json文件 。</p>\n<h3 id=\"在store文件夹下新建index-js\"><a href=\"#在store文件夹下新建index-js\" class=\"headerlink\" title=\"在store文件夹下新建index.js\"></a>在store文件夹下新建index.js</h3><p>​    </p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> state = <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> (&#123;</span><br><span class=\"line\">  locales: [<span class=\"string\">'en'</span>, <span class=\"string\">'cn'</span>],</span><br><span class=\"line\">  locale: <span class=\"string\">'cn'</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> mutations = &#123;</span><br><span class=\"line\">  SET_LANG(state, locale) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (state.locales.indexOf(locale) !== <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">      state.locale = locale</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"踩坑……\"><a href=\"#踩坑……\" class=\"headerlink\" title=\"踩坑……\"></a>踩坑……</h3><p>​    好了，照着官方把该加的都加了，这下就能实现国际化的切换了吧。 然后参考了几篇文章， 通过 <code><strong>this</strong>.$i18n.locale = Langname</code> 或是</p>\n<p> <code>this.$store.commit(‘SET_LANG’, lang)</code> 切换语言。 结果要不就是404， 要不就是一个页面切换了，然后换个页面，也就是切换了路由又变回原来的语言了。。。   </p>\n<p>​    结果找了好久发现是路由的问题，主要是middleware中的这一段代码:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> locale = params.lang || defaultLocale</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (store.state.locales.indexOf(locale) === <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> error(&#123; <span class=\"attr\">message</span>: <span class=\"string\">'This page could not be found.'</span>, <span class=\"attr\">statusCode</span>: <span class=\"number\">404</span> &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// Set locale</span></span><br><span class=\"line\">  store.commit(<span class=\"string\">'SET_LANG'</span>, locale)</span><br><span class=\"line\">  app.i18n.locale = store.state.locale</span><br></pre></td></tr></table></figure>\n<p>每次我们切换页面的时候都会调用这个中间件，然后会去判断路由中的params 如果lang参数有值就将语言设置为对应的值。</p>\n<p>​     比如我的地址是  “<a href=\"http://localhost/zn/&quot;\" target=\"_blank\" rel=\"noopener\">http://localhost/zn/&quot;</a> 那么中间件就会将当前的lang设置为zn  如果就是”<a href=\"http://localhost/&quot;\" target=\"_blank\" rel=\"noopener\">http://localhost/&quot;</a> 就会设置为默认的值.</p>\n<p>​    所以之前我们手动设置了store中的值，切换了路由就会变回原样是因为每次中间件都会把locale设置成默认值(因为我们路由中没有带参数)。</p>\n<p>​    可是当我们路由带上参数后切出现找不到页面的情况，这是因为当前路径下，比如 “<a href=\"http://localhost/zn/&quot;\" target=\"_blank\" rel=\"noopener\">http://localhost/zn/&quot;</a> 找不到我们的页面。 这是我们就要用到nuxt提供给我们的一个 <strong>动态路由</strong>的功能。 </p>\n<p>​    <a href=\"https://zh.nuxtjs.org/guide/routing#%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1\" target=\"_blank\" rel=\"noopener\">动态路由</a>根据官方可如下配置，因为nuxt是根据page下目录生成路由，可如下组织目录:</p>\n<p><img src=\"https://ws4.sinaimg.cn/large/006tKfTcgy1g1mdn9yi7fj30e40n6jsd.jpg\" alt=\"A8CB811A-9DC9-4BB8-8C19-9EFB4ADDA033\"></p>\n<p>_lang 就是动态路由下的参数项，这样不管是带不带参数都能找到页面了。</p>"},{"title":"css多行文本省略号","date":"2019-03-21T05:03:41.000Z","_content":"\n# CSS多行文本设置省略号\n\n\n\n## 单行文本省略号\n\n  如果要设置单行文本超出容器末尾显示省略号是非常简单的，通过:\n\n```css\noverflow: hidden;\ntext-overflow: ellipsis;\n```\n\n即可实现单行文本的省略号。\n\n## 多行文本的省略号\n\n​\t下面就是本文主要讨论的点了，如何实现多行文本超出区域显示省略号，或者说可以设置最多显示几行。\n\n<!-- more -->\n\n​\t实现的方式有多种，可以用css，也可以用js。 其中css也有多种方法, 但一些方法或多或少都有点hack的味道，下面我们介绍一种浏览器原生的多行文本显示的方法。\n\n在包含文本的标签中添加如下css样式:\n\n```css\np {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 4;\n}\n```\n\n> Tips:  1. 只有中文内容在到达最大宽度时才会自动换行\n>\n> 2. 如果要英文支持的话需要添加  `word-break: break-all` 文本才会换行。\n> 3. 经测试  此css样式在chrome、safari浏览器上能正常生效，但在Firefox上好像并不起效果。\n\n\n\n## 踩坑\n\n​\t单独尝试添加上面的样式可以实现多行省略号，但我在Vue以及nuxt框架下开发，几经尝试都不起效果，一直认为是不是浏览器不支持这个样式。结果倒腾许久才发现是 autoprefixer这个插件干的\"好事\"。\n\n在原来的css中我们添加了`-webkit-box-orient: vertical` 这个样式。 但是经过 autoprefixer 处理之后，元素中竟然没有了！！  好吧。。。 手动加上之后就可以实现多行文本省略号的效果了。\n\n​\t那怎么解决 autoprefixer去掉 `-webkit-box-orient: vertical` 这个样式的问题呢？  很简单，在该样式样多加一条注释   `/*! autoprefixer: off */`   。\n\n​\t哦了，这下我们就能愉快的使用多行文本设置省略号了～\n\n\n\n\n\n\n\n","source":"_posts/css多行文本省略号.md","raw":"---\ntitle: css多行文本省略号\ndate: 2019-03-21 13:03:41\ncategories:\n - css\ntags:\n - 前端\n - css技巧\n\n---\n\n# CSS多行文本设置省略号\n\n\n\n## 单行文本省略号\n\n  如果要设置单行文本超出容器末尾显示省略号是非常简单的，通过:\n\n```css\noverflow: hidden;\ntext-overflow: ellipsis;\n```\n\n即可实现单行文本的省略号。\n\n## 多行文本的省略号\n\n​\t下面就是本文主要讨论的点了，如何实现多行文本超出区域显示省略号，或者说可以设置最多显示几行。\n\n<!-- more -->\n\n​\t实现的方式有多种，可以用css，也可以用js。 其中css也有多种方法, 但一些方法或多或少都有点hack的味道，下面我们介绍一种浏览器原生的多行文本显示的方法。\n\n在包含文本的标签中添加如下css样式:\n\n```css\np {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: 4;\n}\n```\n\n> Tips:  1. 只有中文内容在到达最大宽度时才会自动换行\n>\n> 2. 如果要英文支持的话需要添加  `word-break: break-all` 文本才会换行。\n> 3. 经测试  此css样式在chrome、safari浏览器上能正常生效，但在Firefox上好像并不起效果。\n\n\n\n## 踩坑\n\n​\t单独尝试添加上面的样式可以实现多行省略号，但我在Vue以及nuxt框架下开发，几经尝试都不起效果，一直认为是不是浏览器不支持这个样式。结果倒腾许久才发现是 autoprefixer这个插件干的\"好事\"。\n\n在原来的css中我们添加了`-webkit-box-orient: vertical` 这个样式。 但是经过 autoprefixer 处理之后，元素中竟然没有了！！  好吧。。。 手动加上之后就可以实现多行文本省略号的效果了。\n\n​\t那怎么解决 autoprefixer去掉 `-webkit-box-orient: vertical` 这个样式的问题呢？  很简单，在该样式样多加一条注释   `/*! autoprefixer: off */`   。\n\n​\t哦了，这下我们就能愉快的使用多行文本设置省略号了～\n\n\n\n\n\n\n\n","slug":"css多行文本省略号","published":1,"updated":"2019-03-21T05:19:42.250Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgwfy6dm0007kqulq5y2mts2","content":"<h1 id=\"CSS多行文本设置省略号\"><a href=\"#CSS多行文本设置省略号\" class=\"headerlink\" title=\"CSS多行文本设置省略号\"></a>CSS多行文本设置省略号</h1><h2 id=\"单行文本省略号\"><a href=\"#单行文本省略号\" class=\"headerlink\" title=\"单行文本省略号\"></a>单行文本省略号</h2><p>  如果要设置单行文本超出容器末尾显示省略号是非常简单的，通过:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">hidden</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">text-overflow</span>: <span class=\"selector-tag\">ellipsis</span>;</span><br></pre></td></tr></table></figure>\n<p>即可实现单行文本的省略号。</p>\n<h2 id=\"多行文本的省略号\"><a href=\"#多行文本的省略号\" class=\"headerlink\" title=\"多行文本的省略号\"></a>多行文本的省略号</h2><p>​    下面就是本文主要讨论的点了，如何实现多行文本超出区域显示省略号，或者说可以设置最多显示几行。</p>\n<a id=\"more\"></a>\n<p>​    实现的方式有多种，可以用css，也可以用js。 其中css也有多种方法, 但一些方法或多或少都有点hack的味道，下面我们介绍一种浏览器原生的多行文本显示的方法。</p>\n<p>在包含文本的标签中添加如下css样式:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-box-orient</span>: vertical;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-line-clamp</span>: <span class=\"number\">4</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Tips:  1. 只有中文内容在到达最大宽度时才会自动换行</p>\n<ol start=\"2\">\n<li>如果要英文支持的话需要添加  <code>word-break: break-all</code> 文本才会换行。</li>\n<li>经测试  此css样式在chrome、safari浏览器上能正常生效，但在Firefox上好像并不起效果。</li>\n</ol>\n</blockquote>\n<h2 id=\"踩坑\"><a href=\"#踩坑\" class=\"headerlink\" title=\"踩坑\"></a>踩坑</h2><p>​    单独尝试添加上面的样式可以实现多行省略号，但我在Vue以及nuxt框架下开发，几经尝试都不起效果，一直认为是不是浏览器不支持这个样式。结果倒腾许久才发现是 autoprefixer这个插件干的”好事”。</p>\n<p>在原来的css中我们添加了<code>-webkit-box-orient: vertical</code> 这个样式。 但是经过 autoprefixer 处理之后，元素中竟然没有了！！  好吧。。。 手动加上之后就可以实现多行文本省略号的效果了。</p>\n<p>​    那怎么解决 autoprefixer去掉 <code>-webkit-box-orient: vertical</code> 这个样式的问题呢？  很简单，在该样式样多加一条注释   <code>/*! autoprefixer: off */</code>   。</p>\n<p>​    哦了，这下我们就能愉快的使用多行文本设置省略号了～</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"CSS多行文本设置省略号\"><a href=\"#CSS多行文本设置省略号\" class=\"headerlink\" title=\"CSS多行文本设置省略号\"></a>CSS多行文本设置省略号</h1><h2 id=\"单行文本省略号\"><a href=\"#单行文本省略号\" class=\"headerlink\" title=\"单行文本省略号\"></a>单行文本省略号</h2><p>  如果要设置单行文本超出容器末尾显示省略号是非常简单的，通过:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">overflow</span>: <span class=\"selector-tag\">hidden</span>;</span><br><span class=\"line\"><span class=\"selector-tag\">text-overflow</span>: <span class=\"selector-tag\">ellipsis</span>;</span><br></pre></td></tr></table></figure>\n<p>即可实现单行文本的省略号。</p>\n<h2 id=\"多行文本的省略号\"><a href=\"#多行文本的省略号\" class=\"headerlink\" title=\"多行文本的省略号\"></a>多行文本的省略号</h2><p>​    下面就是本文主要讨论的点了，如何实现多行文本超出区域显示省略号，或者说可以设置最多显示几行。</p>","more":"<p>​    实现的方式有多种，可以用css，也可以用js。 其中css也有多种方法, 但一些方法或多或少都有点hack的味道，下面我们介绍一种浏览器原生的多行文本显示的方法。</p>\n<p>在包含文本的标签中添加如下css样式:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\">    <span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-box-orient</span>: vertical;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-line-clamp</span>: <span class=\"number\">4</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Tips:  1. 只有中文内容在到达最大宽度时才会自动换行</p>\n<ol start=\"2\">\n<li>如果要英文支持的话需要添加  <code>word-break: break-all</code> 文本才会换行。</li>\n<li>经测试  此css样式在chrome、safari浏览器上能正常生效，但在Firefox上好像并不起效果。</li>\n</ol>\n</blockquote>\n<h2 id=\"踩坑\"><a href=\"#踩坑\" class=\"headerlink\" title=\"踩坑\"></a>踩坑</h2><p>​    单独尝试添加上面的样式可以实现多行省略号，但我在Vue以及nuxt框架下开发，几经尝试都不起效果，一直认为是不是浏览器不支持这个样式。结果倒腾许久才发现是 autoprefixer这个插件干的”好事”。</p>\n<p>在原来的css中我们添加了<code>-webkit-box-orient: vertical</code> 这个样式。 但是经过 autoprefixer 处理之后，元素中竟然没有了！！  好吧。。。 手动加上之后就可以实现多行文本省略号的效果了。</p>\n<p>​    那怎么解决 autoprefixer去掉 <code>-webkit-box-orient: vertical</code> 这个样式的问题呢？  很简单，在该样式样多加一条注释   <code>/*! autoprefixer: off */</code>   。</p>\n<p>​    哦了，这下我们就能愉快的使用多行文本设置省略号了～</p>"},{"title":"前端知识点梳理 --part one","date":"2020-06-10T15:36:23.000Z","_content":"\n# 前端知识点梳理   --part one\n\n\n\n## 基础部分\n\n### 1.  Html 语义化的好处 ?\n\n* 使html的结构更清晰，更直观，更易于seo\n\n\n\n\n\n###  2. 清除浮动的方法有哪些 ？\n\n* 定义一个空标签再浮动元素之后。 然后给其 <code>clear: both</code> \n* 定义伪元素来清除浮动\n\n> 使用overflow:auto（空标签元素清除浮动而不得不增加无意代码的弊端,,使用zoom:1用于兼容IE）。\n\n\n\n<!-- more -->\n\n### 3. img标签 alt 和 title的异同\n\n*  alt 是当图片显示不出来时显示的文字。\n* title 是hover时显示的提示文字。 (描述性文字， 一直都有)\n\n* 总结： alt是当正常图片显示不出来时的替代内容。title是一直存在的描述性内容。\n\n\n\n### 4. 行内元素有哪些？块级元素有哪些？ 空(void)元素有那些?\n\n*  行内元素: i、strong、b、bm、a、span、input、select、img\n* 块级元素: div、h(x)、p、ul、ol、li\n* 空元素 br\n\n\n\n### 5. html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？\n\n1. 新增的元素\n\n* 语义化元素: article、section、header、nav、footer\n* 音视频元素：video、audio\n* 画布元素： canvas\n* 表单控件： time、email、date、calendar……\n* 缓存 local storage、session storage\n* 新技术： webworker(为 JavaScript 创造多线程环境)、geolacation、websocket\n\n2. 移除的元素\n\n* frame、frameset，noframes\n* 纯表现的元素： basefont，**big**，center，font, s，strike，tt，u\n\n3. 如何支持新的标签\n\n* 直接使用成熟的框架、使用最多的是html5shim框架\n\n4. 如何区分是html5\n\n* docType/新增的元素\n\n\n\n### 6. 介绍一下CSS的盒子模型？\n\n* IE盒模型 ｜ 标准盒模型\n* IE盒模型的计算方式是 border + padding + content  = 宽 ｜ 高\n* 标准盒模型计算方式是 content = 宽 ｜ 高\n\n\n\n### 7. css3新增属性?\n\n* Border- 边框(shadow、img、radius)\n* Background-背景 (image、size、origin(相对不同盒模型)、clip(相对不同盒模型裁剪)) --- (border-box、content-box、padding-box)\n* gradients 渐变。   线性渐变 -- **Linear Gradients**  。  径向渐变 -- **Radial Gradients**\n* 文字效果  (text-shadow: 文字阴影、box-shadow: 盒子阴影 、text-overflow:  文字溢出处理、 word-wrap:  文字换行、 word-break： 拆分换行,非中日韩文本)  字体: @font-face\n* 2D、3D转换  .   2D : translate(移动)、 rotate(旋转)、 scale(缩放)、 matrix(包含旋转，缩放，移动（平移）和倾斜功能。 3D: 2D属性的3D体现\n* 过渡: transition\n* 动画  @keyframes 规则 。 animation ： 使创建的规则生效\n* 多列布局  column-xxx\n* 弹性布局 flex\n* 媒体查询 @media xxx and (max-with: xxxpx) {}\n\n","source":"_posts/前端知识点梳理   --part one.md","raw":"---\ntitle: 前端知识点梳理 --part one\ndate: 2020-06-10 23:36:23\ncategories:\n - javascript\ntags:\n - summary\n---\n\n# 前端知识点梳理   --part one\n\n\n\n## 基础部分\n\n### 1.  Html 语义化的好处 ?\n\n* 使html的结构更清晰，更直观，更易于seo\n\n\n\n\n\n###  2. 清除浮动的方法有哪些 ？\n\n* 定义一个空标签再浮动元素之后。 然后给其 <code>clear: both</code> \n* 定义伪元素来清除浮动\n\n> 使用overflow:auto（空标签元素清除浮动而不得不增加无意代码的弊端,,使用zoom:1用于兼容IE）。\n\n\n\n<!-- more -->\n\n### 3. img标签 alt 和 title的异同\n\n*  alt 是当图片显示不出来时显示的文字。\n* title 是hover时显示的提示文字。 (描述性文字， 一直都有)\n\n* 总结： alt是当正常图片显示不出来时的替代内容。title是一直存在的描述性内容。\n\n\n\n### 4. 行内元素有哪些？块级元素有哪些？ 空(void)元素有那些?\n\n*  行内元素: i、strong、b、bm、a、span、input、select、img\n* 块级元素: div、h(x)、p、ul、ol、li\n* 空元素 br\n\n\n\n### 5. html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？\n\n1. 新增的元素\n\n* 语义化元素: article、section、header、nav、footer\n* 音视频元素：video、audio\n* 画布元素： canvas\n* 表单控件： time、email、date、calendar……\n* 缓存 local storage、session storage\n* 新技术： webworker(为 JavaScript 创造多线程环境)、geolacation、websocket\n\n2. 移除的元素\n\n* frame、frameset，noframes\n* 纯表现的元素： basefont，**big**，center，font, s，strike，tt，u\n\n3. 如何支持新的标签\n\n* 直接使用成熟的框架、使用最多的是html5shim框架\n\n4. 如何区分是html5\n\n* docType/新增的元素\n\n\n\n### 6. 介绍一下CSS的盒子模型？\n\n* IE盒模型 ｜ 标准盒模型\n* IE盒模型的计算方式是 border + padding + content  = 宽 ｜ 高\n* 标准盒模型计算方式是 content = 宽 ｜ 高\n\n\n\n### 7. css3新增属性?\n\n* Border- 边框(shadow、img、radius)\n* Background-背景 (image、size、origin(相对不同盒模型)、clip(相对不同盒模型裁剪)) --- (border-box、content-box、padding-box)\n* gradients 渐变。   线性渐变 -- **Linear Gradients**  。  径向渐变 -- **Radial Gradients**\n* 文字效果  (text-shadow: 文字阴影、box-shadow: 盒子阴影 、text-overflow:  文字溢出处理、 word-wrap:  文字换行、 word-break： 拆分换行,非中日韩文本)  字体: @font-face\n* 2D、3D转换  .   2D : translate(移动)、 rotate(旋转)、 scale(缩放)、 matrix(包含旋转，缩放，移动（平移）和倾斜功能。 3D: 2D属性的3D体现\n* 过渡: transition\n* 动画  @keyframes 规则 。 animation ： 使创建的规则生效\n* 多列布局  column-xxx\n* 弹性布局 flex\n* 媒体查询 @media xxx and (max-with: xxxpx) {}\n\n","slug":"前端知识点梳理   --part one","published":1,"updated":"2020-07-20T15:14:23.307Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgwfy6dn0008kqultpjpjnuv","content":"<h1 id=\"前端知识点梳理-–part-one\"><a href=\"#前端知识点梳理-–part-one\" class=\"headerlink\" title=\"前端知识点梳理   –part one\"></a>前端知识点梳理   –part one</h1><h2 id=\"基础部分\"><a href=\"#基础部分\" class=\"headerlink\" title=\"基础部分\"></a>基础部分</h2><h3 id=\"1-Html-语义化的好处\"><a href=\"#1-Html-语义化的好处\" class=\"headerlink\" title=\"1.  Html 语义化的好处 ?\"></a>1.  Html 语义化的好处 ?</h3><ul>\n<li>使html的结构更清晰，更直观，更易于seo</li>\n</ul>\n<h3 id=\"2-清除浮动的方法有哪些-？\"><a href=\"#2-清除浮动的方法有哪些-？\" class=\"headerlink\" title=\"2. 清除浮动的方法有哪些 ？\"></a>2. 清除浮动的方法有哪些 ？</h3><ul>\n<li>定义一个空标签再浮动元素之后。 然后给其 <code>clear: both</code> </li>\n<li>定义伪元素来清除浮动</li>\n</ul>\n<blockquote>\n<p>使用overflow:auto（空标签元素清除浮动而不得不增加无意代码的弊端,,使用zoom:1用于兼容IE）。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"3-img标签-alt-和-title的异同\"><a href=\"#3-img标签-alt-和-title的异同\" class=\"headerlink\" title=\"3. img标签 alt 和 title的异同\"></a>3. img标签 alt 和 title的异同</h3><ul>\n<li>alt 是当图片显示不出来时显示的文字。</li>\n<li><p>title 是hover时显示的提示文字。 (描述性文字， 一直都有)</p>\n</li>\n<li><p>总结： alt是当正常图片显示不出来时的替代内容。title是一直存在的描述性内容。</p>\n</li>\n</ul>\n<h3 id=\"4-行内元素有哪些？块级元素有哪些？-空-void-元素有那些\"><a href=\"#4-行内元素有哪些？块级元素有哪些？-空-void-元素有那些\" class=\"headerlink\" title=\"4. 行内元素有哪些？块级元素有哪些？ 空(void)元素有那些?\"></a>4. 行内元素有哪些？块级元素有哪些？ 空(void)元素有那些?</h3><ul>\n<li>行内元素: i、strong、b、bm、a、span、input、select、img</li>\n<li>块级元素: div、h(x)、p、ul、ol、li</li>\n<li>空元素 br</li>\n</ul>\n<h3 id=\"5-html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分-HTML-和-HTML5？\"><a href=\"#5-html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分-HTML-和-HTML5？\" class=\"headerlink\" title=\"5. html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？\"></a>5. html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？</h3><ol>\n<li>新增的元素</li>\n</ol>\n<ul>\n<li>语义化元素: article、section、header、nav、footer</li>\n<li>音视频元素：video、audio</li>\n<li>画布元素： canvas</li>\n<li>表单控件： time、email、date、calendar……</li>\n<li>缓存 local storage、session storage</li>\n<li>新技术： webworker(为 JavaScript 创造多线程环境)、geolacation、websocket</li>\n</ul>\n<ol start=\"2\">\n<li>移除的元素</li>\n</ol>\n<ul>\n<li>frame、frameset，noframes</li>\n<li>纯表现的元素： basefont，<strong>big</strong>，center，font, s，strike，tt，u</li>\n</ul>\n<ol start=\"3\">\n<li>如何支持新的标签</li>\n</ol>\n<ul>\n<li>直接使用成熟的框架、使用最多的是html5shim框架</li>\n</ul>\n<ol start=\"4\">\n<li>如何区分是html5</li>\n</ol>\n<ul>\n<li>docType/新增的元素</li>\n</ul>\n<h3 id=\"6-介绍一下CSS的盒子模型？\"><a href=\"#6-介绍一下CSS的盒子模型？\" class=\"headerlink\" title=\"6. 介绍一下CSS的盒子模型？\"></a>6. 介绍一下CSS的盒子模型？</h3><ul>\n<li>IE盒模型 ｜ 标准盒模型</li>\n<li>IE盒模型的计算方式是 border + padding + content  = 宽 ｜ 高</li>\n<li>标准盒模型计算方式是 content = 宽 ｜ 高</li>\n</ul>\n<h3 id=\"7-css3新增属性\"><a href=\"#7-css3新增属性\" class=\"headerlink\" title=\"7. css3新增属性?\"></a>7. css3新增属性?</h3><ul>\n<li>Border- 边框(shadow、img、radius)</li>\n<li>Background-背景 (image、size、origin(相对不同盒模型)、clip(相对不同盒模型裁剪)) — (border-box、content-box、padding-box)</li>\n<li>gradients 渐变。   线性渐变 – <strong>Linear Gradients</strong>  。  径向渐变 – <strong>Radial Gradients</strong></li>\n<li>文字效果  (text-shadow: 文字阴影、box-shadow: 盒子阴影 、text-overflow:  文字溢出处理、 word-wrap:  文字换行、 word-break： 拆分换行,非中日韩文本)  字体: @font-face</li>\n<li>2D、3D转换  .   2D : translate(移动)、 rotate(旋转)、 scale(缩放)、 matrix(包含旋转，缩放，移动（平移）和倾斜功能。 3D: 2D属性的3D体现</li>\n<li>过渡: transition</li>\n<li>动画  @keyframes 规则 。 animation ： 使创建的规则生效</li>\n<li>多列布局  column-xxx</li>\n<li>弹性布局 flex</li>\n<li>媒体查询 @media xxx and (max-with: xxxpx) {}</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"前端知识点梳理-–part-one\"><a href=\"#前端知识点梳理-–part-one\" class=\"headerlink\" title=\"前端知识点梳理   –part one\"></a>前端知识点梳理   –part one</h1><h2 id=\"基础部分\"><a href=\"#基础部分\" class=\"headerlink\" title=\"基础部分\"></a>基础部分</h2><h3 id=\"1-Html-语义化的好处\"><a href=\"#1-Html-语义化的好处\" class=\"headerlink\" title=\"1.  Html 语义化的好处 ?\"></a>1.  Html 语义化的好处 ?</h3><ul>\n<li>使html的结构更清晰，更直观，更易于seo</li>\n</ul>\n<h3 id=\"2-清除浮动的方法有哪些-？\"><a href=\"#2-清除浮动的方法有哪些-？\" class=\"headerlink\" title=\"2. 清除浮动的方法有哪些 ？\"></a>2. 清除浮动的方法有哪些 ？</h3><ul>\n<li>定义一个空标签再浮动元素之后。 然后给其 <code>clear: both</code> </li>\n<li>定义伪元素来清除浮动</li>\n</ul>\n<blockquote>\n<p>使用overflow:auto（空标签元素清除浮动而不得不增加无意代码的弊端,,使用zoom:1用于兼容IE）。</p>\n</blockquote>","more":"<h3 id=\"3-img标签-alt-和-title的异同\"><a href=\"#3-img标签-alt-和-title的异同\" class=\"headerlink\" title=\"3. img标签 alt 和 title的异同\"></a>3. img标签 alt 和 title的异同</h3><ul>\n<li>alt 是当图片显示不出来时显示的文字。</li>\n<li><p>title 是hover时显示的提示文字。 (描述性文字， 一直都有)</p>\n</li>\n<li><p>总结： alt是当正常图片显示不出来时的替代内容。title是一直存在的描述性内容。</p>\n</li>\n</ul>\n<h3 id=\"4-行内元素有哪些？块级元素有哪些？-空-void-元素有那些\"><a href=\"#4-行内元素有哪些？块级元素有哪些？-空-void-元素有那些\" class=\"headerlink\" title=\"4. 行内元素有哪些？块级元素有哪些？ 空(void)元素有那些?\"></a>4. 行内元素有哪些？块级元素有哪些？ 空(void)元素有那些?</h3><ul>\n<li>行内元素: i、strong、b、bm、a、span、input、select、img</li>\n<li>块级元素: div、h(x)、p、ul、ol、li</li>\n<li>空元素 br</li>\n</ul>\n<h3 id=\"5-html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分-HTML-和-HTML5？\"><a href=\"#5-html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分-HTML-和-HTML5？\" class=\"headerlink\" title=\"5. html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？\"></a>5. html5有哪些新特性、移除了那些元素？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？</h3><ol>\n<li>新增的元素</li>\n</ol>\n<ul>\n<li>语义化元素: article、section、header、nav、footer</li>\n<li>音视频元素：video、audio</li>\n<li>画布元素： canvas</li>\n<li>表单控件： time、email、date、calendar……</li>\n<li>缓存 local storage、session storage</li>\n<li>新技术： webworker(为 JavaScript 创造多线程环境)、geolacation、websocket</li>\n</ul>\n<ol start=\"2\">\n<li>移除的元素</li>\n</ol>\n<ul>\n<li>frame、frameset，noframes</li>\n<li>纯表现的元素： basefont，<strong>big</strong>，center，font, s，strike，tt，u</li>\n</ul>\n<ol start=\"3\">\n<li>如何支持新的标签</li>\n</ol>\n<ul>\n<li>直接使用成熟的框架、使用最多的是html5shim框架</li>\n</ul>\n<ol start=\"4\">\n<li>如何区分是html5</li>\n</ol>\n<ul>\n<li>docType/新增的元素</li>\n</ul>\n<h3 id=\"6-介绍一下CSS的盒子模型？\"><a href=\"#6-介绍一下CSS的盒子模型？\" class=\"headerlink\" title=\"6. 介绍一下CSS的盒子模型？\"></a>6. 介绍一下CSS的盒子模型？</h3><ul>\n<li>IE盒模型 ｜ 标准盒模型</li>\n<li>IE盒模型的计算方式是 border + padding + content  = 宽 ｜ 高</li>\n<li>标准盒模型计算方式是 content = 宽 ｜ 高</li>\n</ul>\n<h3 id=\"7-css3新增属性\"><a href=\"#7-css3新增属性\" class=\"headerlink\" title=\"7. css3新增属性?\"></a>7. css3新增属性?</h3><ul>\n<li>Border- 边框(shadow、img、radius)</li>\n<li>Background-背景 (image、size、origin(相对不同盒模型)、clip(相对不同盒模型裁剪)) — (border-box、content-box、padding-box)</li>\n<li>gradients 渐变。   线性渐变 – <strong>Linear Gradients</strong>  。  径向渐变 – <strong>Radial Gradients</strong></li>\n<li>文字效果  (text-shadow: 文字阴影、box-shadow: 盒子阴影 、text-overflow:  文字溢出处理、 word-wrap:  文字换行、 word-break： 拆分换行,非中日韩文本)  字体: @font-face</li>\n<li>2D、3D转换  .   2D : translate(移动)、 rotate(旋转)、 scale(缩放)、 matrix(包含旋转，缩放，移动（平移）和倾斜功能。 3D: 2D属性的3D体现</li>\n<li>过渡: transition</li>\n<li>动画  @keyframes 规则 。 animation ： 使创建的规则生效</li>\n<li>多列布局  column-xxx</li>\n<li>弹性布局 flex</li>\n<li>媒体查询 @media xxx and (max-with: xxxpx) {}</li>\n</ul>"},{"title":"不使用 + 、-求两个数的和 （含符号）","date":"2020-06-18T16:11:23.000Z","_content":"\n\n\n#  不使用 + 、-求两个数的和 （含符号）\n\n\n\n**首先想到用位运算符来处理**\n\n\n\n* ^ 异或   可以理解为不进位的加法  如:  0010 ^ 0101 = 0111   0 + 0 = 0  | 1+1 = 0 | 1 + 0 = 1\n* & 按位与   \n* << 按位左移 \n\n\n\n### 分析： \n\n1. 既然 ^ 异或可以得到不进位得值，那么再通过 & 按位与取得需要进位的位， 再 << 按位左移进位就可以取得进位的值\n2. 将 **没进位的和** ^  **进位**  \n3. 接着再进行以上的操作，**没进位的和** & **进位**     直到 & 的值为0时就代表没有进位了， 就返回 **没进位的和** ^  **进位**  的值\n\n\n\n### eg:   \n\n1. 9 + 7 = 1001 +  0111\n2. s1 = 1001 ^ 0111 = 1110   |  1001 & 0111 = 0001    |  j1 =  0001 << 1 = 0010\n3. j2 = s1 & j1 = 1110 & 0010 = 0010  <<  1 = 0100 (还有进位，继续执行上述步骤)  s2 =  s1 ^ j1 = 1110 ^ 0010 = 1100\n4. J3 = j2 & s2 = 0100 & 1100 = 0100 << 1 = 1000      s3 = j2 ^ s2 = 0100 ^ 1100 = 1000\n5. J4 = j3 & s3 = 1000 & 1000 = 1000 << 1 = 10000    s4 = j3 ^ s3 = 1000 ^ 1000 = 0000\n6. j5 = j4 & s4 = 1 000 & 0000 = 0 0000   s5 = j4 ^ s4 = 1 0000 ^ 0 0000 = 1 0000 = 16\n\n\n\n### j s 实现\n\n\n\n```javascript\nlet add = function(a,b) {\n    let sum = a ^ b;\n    let carry = (a&b) << 1;\n    if(a&b) {\n        return add(sum, carry);\n    } else {\n        return sum;\n    }\n}\n\nadd(10, 6)  // 16\nadd(-2, 8)  // 6\n```\n\n\n\n\n\n### python 实现\n\n\n\n```python\n#!/usr/bin/python3\n\ndef add(a, b):\n\tif(b == 0):\n\t\treturn a\n\tsum = a ^ b\n\tcarry = (a & b) << 1\n\treturn add(sum, carry)\n\t\n\t\nnums = add(2,99) // 101\n```\n\n","source":"_posts/不使用 + 、-求两个数的和 （含符号）.md","raw":"---\ntitle: 不使用 + 、-求两个数的和 （含符号）\ndate: 2020-06-19 00:11:23\ncategories:\n - javascript\ntags:\n - algorithm\n---\n\n\n\n#  不使用 + 、-求两个数的和 （含符号）\n\n\n\n**首先想到用位运算符来处理**\n\n\n\n* ^ 异或   可以理解为不进位的加法  如:  0010 ^ 0101 = 0111   0 + 0 = 0  | 1+1 = 0 | 1 + 0 = 1\n* & 按位与   \n* << 按位左移 \n\n\n\n### 分析： \n\n1. 既然 ^ 异或可以得到不进位得值，那么再通过 & 按位与取得需要进位的位， 再 << 按位左移进位就可以取得进位的值\n2. 将 **没进位的和** ^  **进位**  \n3. 接着再进行以上的操作，**没进位的和** & **进位**     直到 & 的值为0时就代表没有进位了， 就返回 **没进位的和** ^  **进位**  的值\n\n\n\n### eg:   \n\n1. 9 + 7 = 1001 +  0111\n2. s1 = 1001 ^ 0111 = 1110   |  1001 & 0111 = 0001    |  j1 =  0001 << 1 = 0010\n3. j2 = s1 & j1 = 1110 & 0010 = 0010  <<  1 = 0100 (还有进位，继续执行上述步骤)  s2 =  s1 ^ j1 = 1110 ^ 0010 = 1100\n4. J3 = j2 & s2 = 0100 & 1100 = 0100 << 1 = 1000      s3 = j2 ^ s2 = 0100 ^ 1100 = 1000\n5. J4 = j3 & s3 = 1000 & 1000 = 1000 << 1 = 10000    s4 = j3 ^ s3 = 1000 ^ 1000 = 0000\n6. j5 = j4 & s4 = 1 000 & 0000 = 0 0000   s5 = j4 ^ s4 = 1 0000 ^ 0 0000 = 1 0000 = 16\n\n\n\n### j s 实现\n\n\n\n```javascript\nlet add = function(a,b) {\n    let sum = a ^ b;\n    let carry = (a&b) << 1;\n    if(a&b) {\n        return add(sum, carry);\n    } else {\n        return sum;\n    }\n}\n\nadd(10, 6)  // 16\nadd(-2, 8)  // 6\n```\n\n\n\n\n\n### python 实现\n\n\n\n```python\n#!/usr/bin/python3\n\ndef add(a, b):\n\tif(b == 0):\n\t\treturn a\n\tsum = a ^ b\n\tcarry = (a & b) << 1\n\treturn add(sum, carry)\n\t\n\t\nnums = add(2,99) // 101\n```\n\n","slug":"不使用 + 、-求两个数的和 （含符号）","published":1,"updated":"2020-06-18T16:12:25.534Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgwfy6dr000ckquly4wguliw","content":"<h1 id=\"不使用-、-求两个数的和-（含符号）\"><a href=\"#不使用-、-求两个数的和-（含符号）\" class=\"headerlink\" title=\"不使用 + 、-求两个数的和 （含符号）\"></a>不使用 + 、-求两个数的和 （含符号）</h1><p><strong>首先想到用位运算符来处理</strong></p>\n<ul>\n<li>^ 异或   可以理解为不进位的加法  如:  0010 ^ 0101 = 0111   0 + 0 = 0  | 1+1 = 0 | 1 + 0 = 1</li>\n<li>&amp; 按位与   </li>\n<li>&lt;&lt; 按位左移 </li>\n</ul>\n<h3 id=\"分析：\"><a href=\"#分析：\" class=\"headerlink\" title=\"分析：\"></a>分析：</h3><ol>\n<li>既然 ^ 异或可以得到不进位得值，那么再通过 &amp; 按位与取得需要进位的位， 再 &lt;&lt; 按位左移进位就可以取得进位的值</li>\n<li>将 <strong>没进位的和</strong> ^  <strong>进位</strong>  </li>\n<li>接着再进行以上的操作，<strong>没进位的和</strong> &amp; <strong>进位</strong>     直到 &amp; 的值为0时就代表没有进位了， 就返回 <strong>没进位的和</strong> ^  <strong>进位</strong>  的值</li>\n</ol>\n<h3 id=\"eg\"><a href=\"#eg\" class=\"headerlink\" title=\"eg:\"></a>eg:</h3><ol>\n<li>9 + 7 = 1001 +  0111</li>\n<li>s1 = 1001 ^ 0111 = 1110   |  1001 &amp; 0111 = 0001    |  j1 =  0001 &lt;&lt; 1 = 0010</li>\n<li>j2 = s1 &amp; j1 = 1110 &amp; 0010 = 0010  &lt;&lt;  1 = 0100 (还有进位，继续执行上述步骤)  s2 =  s1 ^ j1 = 1110 ^ 0010 = 1100</li>\n<li>J3 = j2 &amp; s2 = 0100 &amp; 1100 = 0100 &lt;&lt; 1 = 1000      s3 = j2 ^ s2 = 0100 ^ 1100 = 1000</li>\n<li>J4 = j3 &amp; s3 = 1000 &amp; 1000 = 1000 &lt;&lt; 1 = 10000    s4 = j3 ^ s3 = 1000 ^ 1000 = 0000</li>\n<li>j5 = j4 &amp; s4 = 1 000 &amp; 0000 = 0 0000   s5 = j4 ^ s4 = 1 0000 ^ 0 0000 = 1 0000 = 16</li>\n</ol>\n<h3 id=\"j-s-实现\"><a href=\"#j-s-实现\" class=\"headerlink\" title=\"j s 实现\"></a>j s 实现</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> add = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = a ^ b;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> carry = (a&amp;b) &lt;&lt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&amp;b) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> add(sum, carry);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">10</span>, <span class=\"number\">6</span>)  <span class=\"comment\">// 16</span></span><br><span class=\"line\">add(<span class=\"number\">-2</span>, <span class=\"number\">8</span>)  <span class=\"comment\">// 6</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"python-实现\"><a href=\"#python-实现\" class=\"headerlink\" title=\"python 实现\"></a>python 实现</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add</span><span class=\"params\">(a, b)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(b == <span class=\"number\">0</span>):</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a</span><br><span class=\"line\">\tsum = a ^ b</span><br><span class=\"line\">\tcarry = (a &amp; b) &lt;&lt; <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> add(sum, carry)</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">nums = add(<span class=\"number\">2</span>,<span class=\"number\">99</span>) // <span class=\"number\">101</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"不使用-、-求两个数的和-（含符号）\"><a href=\"#不使用-、-求两个数的和-（含符号）\" class=\"headerlink\" title=\"不使用 + 、-求两个数的和 （含符号）\"></a>不使用 + 、-求两个数的和 （含符号）</h1><p><strong>首先想到用位运算符来处理</strong></p>\n<ul>\n<li>^ 异或   可以理解为不进位的加法  如:  0010 ^ 0101 = 0111   0 + 0 = 0  | 1+1 = 0 | 1 + 0 = 1</li>\n<li>&amp; 按位与   </li>\n<li>&lt;&lt; 按位左移 </li>\n</ul>\n<h3 id=\"分析：\"><a href=\"#分析：\" class=\"headerlink\" title=\"分析：\"></a>分析：</h3><ol>\n<li>既然 ^ 异或可以得到不进位得值，那么再通过 &amp; 按位与取得需要进位的位， 再 &lt;&lt; 按位左移进位就可以取得进位的值</li>\n<li>将 <strong>没进位的和</strong> ^  <strong>进位</strong>  </li>\n<li>接着再进行以上的操作，<strong>没进位的和</strong> &amp; <strong>进位</strong>     直到 &amp; 的值为0时就代表没有进位了， 就返回 <strong>没进位的和</strong> ^  <strong>进位</strong>  的值</li>\n</ol>\n<h3 id=\"eg\"><a href=\"#eg\" class=\"headerlink\" title=\"eg:\"></a>eg:</h3><ol>\n<li>9 + 7 = 1001 +  0111</li>\n<li>s1 = 1001 ^ 0111 = 1110   |  1001 &amp; 0111 = 0001    |  j1 =  0001 &lt;&lt; 1 = 0010</li>\n<li>j2 = s1 &amp; j1 = 1110 &amp; 0010 = 0010  &lt;&lt;  1 = 0100 (还有进位，继续执行上述步骤)  s2 =  s1 ^ j1 = 1110 ^ 0010 = 1100</li>\n<li>J3 = j2 &amp; s2 = 0100 &amp; 1100 = 0100 &lt;&lt; 1 = 1000      s3 = j2 ^ s2 = 0100 ^ 1100 = 1000</li>\n<li>J4 = j3 &amp; s3 = 1000 &amp; 1000 = 1000 &lt;&lt; 1 = 10000    s4 = j3 ^ s3 = 1000 ^ 1000 = 0000</li>\n<li>j5 = j4 &amp; s4 = 1 000 &amp; 0000 = 0 0000   s5 = j4 ^ s4 = 1 0000 ^ 0 0000 = 1 0000 = 16</li>\n</ol>\n<h3 id=\"j-s-实现\"><a href=\"#j-s-实现\" class=\"headerlink\" title=\"j s 实现\"></a>j s 实现</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> add = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a,b</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = a ^ b;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> carry = (a&amp;b) &lt;&lt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a&amp;b) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> add(sum, carry);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">10</span>, <span class=\"number\">6</span>)  <span class=\"comment\">// 16</span></span><br><span class=\"line\">add(<span class=\"number\">-2</span>, <span class=\"number\">8</span>)  <span class=\"comment\">// 6</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"python-实现\"><a href=\"#python-实现\" class=\"headerlink\" title=\"python 实现\"></a>python 实现</h3><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add</span><span class=\"params\">(a, b)</span>:</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(b == <span class=\"number\">0</span>):</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> a</span><br><span class=\"line\">\tsum = a ^ b</span><br><span class=\"line\">\tcarry = (a &amp; b) &lt;&lt; <span class=\"number\">1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> add(sum, carry)</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">nums = add(<span class=\"number\">2</span>,<span class=\"number\">99</span>) // <span class=\"number\">101</span></span><br></pre></td></tr></table></figure>\n"},{"title":"从零开始学习Vue源码 —— 概览","date":"2020-07-01T15:50:23.000Z","_content":"\n# 从零开始学习Vue源码 —— 概览\n\n\n\n\n\n先上一张图\n\n\n\n![](https://user-gold-cdn.xitu.io/2017/12/19/1606e7eaa2a664e8?imageslim)\n\n\n\n以上流程包括了从：\n\n> 初始化 —— 挂载 —— 解析模版 —— 生成渲染函数 ——   render function转换为VNode节点最终形成Virtual Dom Tree ——  virtual dom tree转化为真实Dom节点从而渲染视图\n\n\n\n响应式更新包括了:\n\n> 在init时进行了`Object.defineProperty` 的绑定 —— render function渲染读取值，触发getter函数 —— 进行依赖收集 —— 修改对象值触发setter函数 —— 通知**[依赖收集]**中Dep的每个 watcher 值变化了，需要更新视图 —— watcher调用 `update`来更新视图 ——  将新、旧VNode传入patch进行diff比较，只修改比较得出的差异的部分Dom\n\n\n\n<!-- more -->\n\n## init\n\n在 `new Vue()`  之后， 会进行一系列的初始化操作，包括初始化 **生命周期** 、 **事件**、**props** 、 **methods** 、 **data** 、 **computed** 、 **watch** 等。 最重要的是进行 `Object.defineProperty` 的绑定，用于实现 **[响应式]** 和 **[依赖收集]** \n\n\n\n## $mount\n\n\n\n在初始化之后就会进行组件的挂载\n\n\n\n## compile\n\n如果是运行时会进行`template`模版的编译， 包括 ：\n\n* **parse** ——  使用正则解析模版中的指令、class、style等 ， 形成AST (抽象语法树)\n* **optimize** —— 标记 static 静态节点，用于后面`update` 时 `patch` 执行diff算法对静态节点跳过，从而优化性能\n* **generate** —— 将AST转换为 render function， 包括 render字符串 和 staticRenderFns字符串\n\n\n\n经过以上步骤之后，就会生产用于渲染VNode的 render function\n\n\n\n\n\n## Virtual DOM\n\nRender function 转换为Vnode节点，最终形成 virtual Dom Tree ，最后虚拟Dom渲染得到真实Dom\n\n\n\n\n\n## 响应式\n\n\n\nrender function被渲染时会读取 **Init**时绑定的值，就会触发 getter函数进行 **[依赖收集]** \n\n![](https://user-gold-cdn.xitu.io/2017/12/21/160770b2a77e084e?imageView2)\n\n **[依赖收集]** 是为了将观察者watcher对象存放到订阅者Dep的subs中\n\n\n\n在修改对象值时会触发setter函数，通知之前依赖收集dep中的每个watcher值发生改变了，紧接着，watcher就会调用 `update`来更新视图\n\n\n\n*关于setter为什么要通知dep中的每个watch，这里引用一段网友的解释:*\n\n> 通知所有的watcher是指对应的dep保存的所有watcher。进行数据劫持的时候，循环遍历data中所有的属性，一个属性就会创建一个唯一的dep,当初始化解析编译界面的时候，一个指令/表达式就是一个watcher,那么解析指令/表达式的值的时候就去读data中的属性，触发getter，再触发添加dep添加订阅（将watcher添加到dep.subs中），当修改对应的属性的时候，触发setter，那么就再去触发这个dep保存的所有watcher\n\n\n\n\n\n## 总结\n\n\n\n以上大概梳理呢Vue整个运行机制，后续会针对每个大板块，小功能进行更细致化的分析。\n\n","source":"_posts/从零开始学习Vue源码(一) —— 概览.md","raw":"---\ntitle: 从零开始学习Vue源码 —— 概览\ndate: 2020-07-01 23:50:23\ncategories:\n - javascript\n - vue\ntags:\n - vue\n---\n\n# 从零开始学习Vue源码 —— 概览\n\n\n\n\n\n先上一张图\n\n\n\n![](https://user-gold-cdn.xitu.io/2017/12/19/1606e7eaa2a664e8?imageslim)\n\n\n\n以上流程包括了从：\n\n> 初始化 —— 挂载 —— 解析模版 —— 生成渲染函数 ——   render function转换为VNode节点最终形成Virtual Dom Tree ——  virtual dom tree转化为真实Dom节点从而渲染视图\n\n\n\n响应式更新包括了:\n\n> 在init时进行了`Object.defineProperty` 的绑定 —— render function渲染读取值，触发getter函数 —— 进行依赖收集 —— 修改对象值触发setter函数 —— 通知**[依赖收集]**中Dep的每个 watcher 值变化了，需要更新视图 —— watcher调用 `update`来更新视图 ——  将新、旧VNode传入patch进行diff比较，只修改比较得出的差异的部分Dom\n\n\n\n<!-- more -->\n\n## init\n\n在 `new Vue()`  之后， 会进行一系列的初始化操作，包括初始化 **生命周期** 、 **事件**、**props** 、 **methods** 、 **data** 、 **computed** 、 **watch** 等。 最重要的是进行 `Object.defineProperty` 的绑定，用于实现 **[响应式]** 和 **[依赖收集]** \n\n\n\n## $mount\n\n\n\n在初始化之后就会进行组件的挂载\n\n\n\n## compile\n\n如果是运行时会进行`template`模版的编译， 包括 ：\n\n* **parse** ——  使用正则解析模版中的指令、class、style等 ， 形成AST (抽象语法树)\n* **optimize** —— 标记 static 静态节点，用于后面`update` 时 `patch` 执行diff算法对静态节点跳过，从而优化性能\n* **generate** —— 将AST转换为 render function， 包括 render字符串 和 staticRenderFns字符串\n\n\n\n经过以上步骤之后，就会生产用于渲染VNode的 render function\n\n\n\n\n\n## Virtual DOM\n\nRender function 转换为Vnode节点，最终形成 virtual Dom Tree ，最后虚拟Dom渲染得到真实Dom\n\n\n\n\n\n## 响应式\n\n\n\nrender function被渲染时会读取 **Init**时绑定的值，就会触发 getter函数进行 **[依赖收集]** \n\n![](https://user-gold-cdn.xitu.io/2017/12/21/160770b2a77e084e?imageView2)\n\n **[依赖收集]** 是为了将观察者watcher对象存放到订阅者Dep的subs中\n\n\n\n在修改对象值时会触发setter函数，通知之前依赖收集dep中的每个watcher值发生改变了，紧接着，watcher就会调用 `update`来更新视图\n\n\n\n*关于setter为什么要通知dep中的每个watch，这里引用一段网友的解释:*\n\n> 通知所有的watcher是指对应的dep保存的所有watcher。进行数据劫持的时候，循环遍历data中所有的属性，一个属性就会创建一个唯一的dep,当初始化解析编译界面的时候，一个指令/表达式就是一个watcher,那么解析指令/表达式的值的时候就去读data中的属性，触发getter，再触发添加dep添加订阅（将watcher添加到dep.subs中），当修改对应的属性的时候，触发setter，那么就再去触发这个dep保存的所有watcher\n\n\n\n\n\n## 总结\n\n\n\n以上大概梳理呢Vue整个运行机制，后续会针对每个大板块，小功能进行更细致化的分析。\n\n","slug":"从零开始学习Vue源码(一) —— 概览","published":1,"updated":"2020-07-20T14:58:23.800Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgwfy6du000dkqulxoit30mh","content":"<h1 id=\"从零开始学习Vue源码-——-概览\"><a href=\"#从零开始学习Vue源码-——-概览\" class=\"headerlink\" title=\"从零开始学习Vue源码 —— 概览\"></a>从零开始学习Vue源码 —— 概览</h1><p>先上一张图</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2017/12/19/1606e7eaa2a664e8?imageslim\" alt=\"\"></p>\n<p>以上流程包括了从：</p>\n<blockquote>\n<p>初始化 —— 挂载 —— 解析模版 —— 生成渲染函数 ——   render function转换为VNode节点最终形成Virtual Dom Tree ——  virtual dom tree转化为真实Dom节点从而渲染视图</p>\n</blockquote>\n<p>响应式更新包括了:</p>\n<blockquote>\n<p>在init时进行了<code>Object.defineProperty</code> 的绑定 —— render function渲染读取值，触发getter函数 —— 进行依赖收集 —— 修改对象值触发setter函数 —— 通知<strong>[依赖收集]</strong>中Dep的每个 watcher 值变化了，需要更新视图 —— watcher调用 <code>update</code>来更新视图 ——  将新、旧VNode传入patch进行diff比较，只修改比较得出的差异的部分Dom</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h2><p>在 <code>new Vue()</code>  之后， 会进行一系列的初始化操作，包括初始化 <strong>生命周期</strong> 、 <strong>事件</strong>、<strong>props</strong> 、 <strong>methods</strong> 、 <strong>data</strong> 、 <strong>computed</strong> 、 <strong>watch</strong> 等。 最重要的是进行 <code>Object.defineProperty</code> 的绑定，用于实现 <strong>[响应式]</strong> 和 <strong>[依赖收集]</strong> </p>\n<h2 id=\"mount\"><a href=\"#mount\" class=\"headerlink\" title=\"$mount\"></a>$mount</h2><p>在初始化之后就会进行组件的挂载</p>\n<h2 id=\"compile\"><a href=\"#compile\" class=\"headerlink\" title=\"compile\"></a>compile</h2><p>如果是运行时会进行<code>template</code>模版的编译， 包括 ：</p>\n<ul>\n<li><strong>parse</strong> ——  使用正则解析模版中的指令、class、style等 ， 形成AST (抽象语法树)</li>\n<li><strong>optimize</strong> —— 标记 static 静态节点，用于后面<code>update</code> 时 <code>patch</code> 执行diff算法对静态节点跳过，从而优化性能</li>\n<li><strong>generate</strong> —— 将AST转换为 render function， 包括 render字符串 和 staticRenderFns字符串</li>\n</ul>\n<p>经过以上步骤之后，就会生产用于渲染VNode的 render function</p>\n<h2 id=\"Virtual-DOM\"><a href=\"#Virtual-DOM\" class=\"headerlink\" title=\"Virtual DOM\"></a>Virtual DOM</h2><p>Render function 转换为Vnode节点，最终形成 virtual Dom Tree ，最后虚拟Dom渲染得到真实Dom</p>\n<h2 id=\"响应式\"><a href=\"#响应式\" class=\"headerlink\" title=\"响应式\"></a>响应式</h2><p>render function被渲染时会读取 <strong>Init</strong>时绑定的值，就会触发 getter函数进行 <strong>[依赖收集]</strong> </p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2017/12/21/160770b2a77e084e?imageView2\" alt=\"\"></p>\n<p> <strong>[依赖收集]</strong> 是为了将观察者watcher对象存放到订阅者Dep的subs中</p>\n<p>在修改对象值时会触发setter函数，通知之前依赖收集dep中的每个watcher值发生改变了，紧接着，watcher就会调用 <code>update</code>来更新视图</p>\n<p><em>关于setter为什么要通知dep中的每个watch，这里引用一段网友的解释:</em></p>\n<blockquote>\n<p>通知所有的watcher是指对应的dep保存的所有watcher。进行数据劫持的时候，循环遍历data中所有的属性，一个属性就会创建一个唯一的dep,当初始化解析编译界面的时候，一个指令/表达式就是一个watcher,那么解析指令/表达式的值的时候就去读data中的属性，触发getter，再触发添加dep添加订阅（将watcher添加到dep.subs中），当修改对应的属性的时候，触发setter，那么就再去触发这个dep保存的所有watcher</p>\n</blockquote>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>以上大概梳理呢Vue整个运行机制，后续会针对每个大板块，小功能进行更细致化的分析。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"从零开始学习Vue源码-——-概览\"><a href=\"#从零开始学习Vue源码-——-概览\" class=\"headerlink\" title=\"从零开始学习Vue源码 —— 概览\"></a>从零开始学习Vue源码 —— 概览</h1><p>先上一张图</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2017/12/19/1606e7eaa2a664e8?imageslim\" alt=\"\"></p>\n<p>以上流程包括了从：</p>\n<blockquote>\n<p>初始化 —— 挂载 —— 解析模版 —— 生成渲染函数 ——   render function转换为VNode节点最终形成Virtual Dom Tree ——  virtual dom tree转化为真实Dom节点从而渲染视图</p>\n</blockquote>\n<p>响应式更新包括了:</p>\n<blockquote>\n<p>在init时进行了<code>Object.defineProperty</code> 的绑定 —— render function渲染读取值，触发getter函数 —— 进行依赖收集 —— 修改对象值触发setter函数 —— 通知<strong>[依赖收集]</strong>中Dep的每个 watcher 值变化了，需要更新视图 —— watcher调用 <code>update</code>来更新视图 ——  将新、旧VNode传入patch进行diff比较，只修改比较得出的差异的部分Dom</p>\n</blockquote>","more":"<h2 id=\"init\"><a href=\"#init\" class=\"headerlink\" title=\"init\"></a>init</h2><p>在 <code>new Vue()</code>  之后， 会进行一系列的初始化操作，包括初始化 <strong>生命周期</strong> 、 <strong>事件</strong>、<strong>props</strong> 、 <strong>methods</strong> 、 <strong>data</strong> 、 <strong>computed</strong> 、 <strong>watch</strong> 等。 最重要的是进行 <code>Object.defineProperty</code> 的绑定，用于实现 <strong>[响应式]</strong> 和 <strong>[依赖收集]</strong> </p>\n<h2 id=\"mount\"><a href=\"#mount\" class=\"headerlink\" title=\"$mount\"></a>$mount</h2><p>在初始化之后就会进行组件的挂载</p>\n<h2 id=\"compile\"><a href=\"#compile\" class=\"headerlink\" title=\"compile\"></a>compile</h2><p>如果是运行时会进行<code>template</code>模版的编译， 包括 ：</p>\n<ul>\n<li><strong>parse</strong> ——  使用正则解析模版中的指令、class、style等 ， 形成AST (抽象语法树)</li>\n<li><strong>optimize</strong> —— 标记 static 静态节点，用于后面<code>update</code> 时 <code>patch</code> 执行diff算法对静态节点跳过，从而优化性能</li>\n<li><strong>generate</strong> —— 将AST转换为 render function， 包括 render字符串 和 staticRenderFns字符串</li>\n</ul>\n<p>经过以上步骤之后，就会生产用于渲染VNode的 render function</p>\n<h2 id=\"Virtual-DOM\"><a href=\"#Virtual-DOM\" class=\"headerlink\" title=\"Virtual DOM\"></a>Virtual DOM</h2><p>Render function 转换为Vnode节点，最终形成 virtual Dom Tree ，最后虚拟Dom渲染得到真实Dom</p>\n<h2 id=\"响应式\"><a href=\"#响应式\" class=\"headerlink\" title=\"响应式\"></a>响应式</h2><p>render function被渲染时会读取 <strong>Init</strong>时绑定的值，就会触发 getter函数进行 <strong>[依赖收集]</strong> </p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2017/12/21/160770b2a77e084e?imageView2\" alt=\"\"></p>\n<p> <strong>[依赖收集]</strong> 是为了将观察者watcher对象存放到订阅者Dep的subs中</p>\n<p>在修改对象值时会触发setter函数，通知之前依赖收集dep中的每个watcher值发生改变了，紧接着，watcher就会调用 <code>update</code>来更新视图</p>\n<p><em>关于setter为什么要通知dep中的每个watch，这里引用一段网友的解释:</em></p>\n<blockquote>\n<p>通知所有的watcher是指对应的dep保存的所有watcher。进行数据劫持的时候，循环遍历data中所有的属性，一个属性就会创建一个唯一的dep,当初始化解析编译界面的时候，一个指令/表达式就是一个watcher,那么解析指令/表达式的值的时候就去读data中的属性，触发getter，再触发添加dep添加订阅（将watcher添加到dep.subs中），当修改对应的属性的时候，触发setter，那么就再去触发这个dep保存的所有watcher</p>\n</blockquote>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>以上大概梳理呢Vue整个运行机制，后续会针对每个大板块，小功能进行更细致化的分析。</p>"},{"title":"从零开始学习Vue源码 ——响应式基本原理","date":"2020-07-01T15:55:23.000Z","_content":"\n# 从零开始学习Vue源码 ——响应式基本原理\n\n\n\n\n\n#### 这里实现一个简易版本的响应式系统来形象的理解数据是如何在初始化的时候被劫持，以及如何在修改时更新视图的。\n\n\n\n### 首先看下Vue2.x实现响应式系统最重要的方法\n\n\n\n``Object.defineProperty``, Vue2.x就是基于它实现的响应式\n\n```javascript\n/*\n    obj: 目标对象\n    prop: 需要操作的目标对象的属性名\n    descriptor: 描述符\n    \n    return value 传入对象\n*/\nObject.defineProperty(obj, prop, descriptor)\n```\n\n\n\n具体的属性以及使用方法可以参考[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty)\n\n\n\n<!-- more -->\n\n#### 下面贴一个简易版响应式的代码实现\n\n\n\n```javascript\n// 更新视图时调用\nfunction cb (val) {\n    /* 渲染视图 */\n    console.log(\"视图更新啦～\");\n}\n\n// 对对象中某个属性进行数据劫持\nfunction defineReactive (obj, key, val) {\n    Object.defineProperty(obj, key, {\n        enumerable: true,       /* 属性可枚举 */\n        configurable: true,     /* 属性可被修改或删除 */\n        get: function reactiveGetter () {\n            return val;         /* 实际上会依赖收集 */\n        },\n        set: function reactiveSetter (newVal) {\n            if (newVal === val) return;\n            cb(newVal);\n        }\n    });\n}\n\n// 遍历对象所有属性，进行数据劫持\nfunction observer (value) {\n    if (!value || (typeof value !== 'object')) {\n        return;\n    }\n    \n    Object.keys(value).forEach((key) => {\n        if(typeof value[key] === 'object') {\n            observer(value[key]) // 递归遍历深层次属性\n        }\n        defineReactive(value, key, value[key]);\n    });\n}\n\nclass Vue {\n  constructor(options) {\n    this._data = option.data\n    observer(this._data);\n  }\n}\n\nconst vm = new Vue({\n  data: {\n    name: {firstName: 'z', lastName: 'zz'}\n  }\n})\n\nvm._data.name.firstName = 'cc' // 此时会打印 视图更新啦～\n\n\n```\n\n\n\n##### 下面我们一步步解析以上简易版响应式系统原理\n\n\n\n1. 首先我们要实现一个对对象属性进行数据劫持，跟踪属性更新的函数 `defineReactive`  ， 该函数使用了 `Object.defineProperty` 进行数据劫持, 被设置的属性会在读取时触发 `getter`,  会在设置时触发 `setter`    执行里面更新视图的函数 `cb` 打印出  *视图更新啦～*\n\n\n\n2. 只有一个`defineReactive`还不够， 我们还需要实现一个 `observer`  来对对象所有属性遍历、递归进行绑定, 这样对象上所有属性修改时都会触发getter 、 setter。\n3. 最后我们构建一个Vue 的class类， 在构造函数中初始化data，并进行**[响应式]** 化\n4. 当实例化Vue后，我们修改_data上的值就会触发setter 更新视图\n\n\n\n## 总结\n\n响应式系统最重要的就是数据劫持部分，当然这里只是一个简单的实现，像数组对象等都没处理，不过能通过这个demo了解相应式的基本原理。\n\n","source":"_posts/从零开始学习Vue源码(二) ——响应式基本原理.md","raw":"---\ntitle: 从零开始学习Vue源码 ——响应式基本原理\ndate: 2020-07-01 23:55:23\ncategories:\n - javascript\n - vue\ntags:\n - vue\n---\n\n# 从零开始学习Vue源码 ——响应式基本原理\n\n\n\n\n\n#### 这里实现一个简易版本的响应式系统来形象的理解数据是如何在初始化的时候被劫持，以及如何在修改时更新视图的。\n\n\n\n### 首先看下Vue2.x实现响应式系统最重要的方法\n\n\n\n``Object.defineProperty``, Vue2.x就是基于它实现的响应式\n\n```javascript\n/*\n    obj: 目标对象\n    prop: 需要操作的目标对象的属性名\n    descriptor: 描述符\n    \n    return value 传入对象\n*/\nObject.defineProperty(obj, prop, descriptor)\n```\n\n\n\n具体的属性以及使用方法可以参考[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty)\n\n\n\n<!-- more -->\n\n#### 下面贴一个简易版响应式的代码实现\n\n\n\n```javascript\n// 更新视图时调用\nfunction cb (val) {\n    /* 渲染视图 */\n    console.log(\"视图更新啦～\");\n}\n\n// 对对象中某个属性进行数据劫持\nfunction defineReactive (obj, key, val) {\n    Object.defineProperty(obj, key, {\n        enumerable: true,       /* 属性可枚举 */\n        configurable: true,     /* 属性可被修改或删除 */\n        get: function reactiveGetter () {\n            return val;         /* 实际上会依赖收集 */\n        },\n        set: function reactiveSetter (newVal) {\n            if (newVal === val) return;\n            cb(newVal);\n        }\n    });\n}\n\n// 遍历对象所有属性，进行数据劫持\nfunction observer (value) {\n    if (!value || (typeof value !== 'object')) {\n        return;\n    }\n    \n    Object.keys(value).forEach((key) => {\n        if(typeof value[key] === 'object') {\n            observer(value[key]) // 递归遍历深层次属性\n        }\n        defineReactive(value, key, value[key]);\n    });\n}\n\nclass Vue {\n  constructor(options) {\n    this._data = option.data\n    observer(this._data);\n  }\n}\n\nconst vm = new Vue({\n  data: {\n    name: {firstName: 'z', lastName: 'zz'}\n  }\n})\n\nvm._data.name.firstName = 'cc' // 此时会打印 视图更新啦～\n\n\n```\n\n\n\n##### 下面我们一步步解析以上简易版响应式系统原理\n\n\n\n1. 首先我们要实现一个对对象属性进行数据劫持，跟踪属性更新的函数 `defineReactive`  ， 该函数使用了 `Object.defineProperty` 进行数据劫持, 被设置的属性会在读取时触发 `getter`,  会在设置时触发 `setter`    执行里面更新视图的函数 `cb` 打印出  *视图更新啦～*\n\n\n\n2. 只有一个`defineReactive`还不够， 我们还需要实现一个 `observer`  来对对象所有属性遍历、递归进行绑定, 这样对象上所有属性修改时都会触发getter 、 setter。\n3. 最后我们构建一个Vue 的class类， 在构造函数中初始化data，并进行**[响应式]** 化\n4. 当实例化Vue后，我们修改_data上的值就会触发setter 更新视图\n\n\n\n## 总结\n\n响应式系统最重要的就是数据劫持部分，当然这里只是一个简单的实现，像数组对象等都没处理，不过能通过这个demo了解相应式的基本原理。\n\n","slug":"从零开始学习Vue源码(二) ——响应式基本原理","published":1,"updated":"2020-07-20T14:58:33.870Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgwfy6dx000hkqul3vb38fyp","content":"<h1 id=\"从零开始学习Vue源码-——响应式基本原理\"><a href=\"#从零开始学习Vue源码-——响应式基本原理\" class=\"headerlink\" title=\"从零开始学习Vue源码 ——响应式基本原理\"></a>从零开始学习Vue源码 ——响应式基本原理</h1><h4 id=\"这里实现一个简易版本的响应式系统来形象的理解数据是如何在初始化的时候被劫持，以及如何在修改时更新视图的。\"><a href=\"#这里实现一个简易版本的响应式系统来形象的理解数据是如何在初始化的时候被劫持，以及如何在修改时更新视图的。\" class=\"headerlink\" title=\"这里实现一个简易版本的响应式系统来形象的理解数据是如何在初始化的时候被劫持，以及如何在修改时更新视图的。\"></a>这里实现一个简易版本的响应式系统来形象的理解数据是如何在初始化的时候被劫持，以及如何在修改时更新视图的。</h4><h3 id=\"首先看下Vue2-x实现响应式系统最重要的方法\"><a href=\"#首先看下Vue2-x实现响应式系统最重要的方法\" class=\"headerlink\" title=\"首先看下Vue2.x实现响应式系统最重要的方法\"></a>首先看下Vue2.x实现响应式系统最重要的方法</h3><p><code>Object.defineProperty</code>, Vue2.x就是基于它实现的响应式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    obj: 目标对象</span></span><br><span class=\"line\"><span class=\"comment\">    prop: 需要操作的目标对象的属性名</span></span><br><span class=\"line\"><span class=\"comment\">    descriptor: 描述符</span></span><br><span class=\"line\"><span class=\"comment\">    </span></span><br><span class=\"line\"><span class=\"comment\">    return value 传入对象</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(obj, prop, descriptor)</span><br></pre></td></tr></table></figure>\n<p>具体的属性以及使用方法可以参考<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\" target=\"_blank\" rel=\"noopener\">MDN</a></p>\n<a id=\"more\"></a>\n<h4 id=\"下面贴一个简易版响应式的代码实现\"><a href=\"#下面贴一个简易版响应式的代码实现\" class=\"headerlink\" title=\"下面贴一个简易版响应式的代码实现\"></a>下面贴一个简易版响应式的代码实现</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 更新视图时调用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cb</span> (<span class=\"params\">val</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 渲染视图 */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"视图更新啦～\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对对象中某个属性进行数据劫持</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">defineReactive</span> (<span class=\"params\">obj, key, val</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">Object</span>.defineProperty(obj, key, &#123;</span><br><span class=\"line\">        enumerable: <span class=\"literal\">true</span>,       <span class=\"comment\">/* 属性可枚举 */</span></span><br><span class=\"line\">        configurable: <span class=\"literal\">true</span>,     <span class=\"comment\">/* 属性可被修改或删除 */</span></span><br><span class=\"line\">        get: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reactiveGetter</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> val;         <span class=\"comment\">/* 实际上会依赖收集 */</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        set: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reactiveSetter</span> (<span class=\"params\">newVal</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (newVal === val) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            cb(newVal);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历对象所有属性，进行数据劫持</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">observer</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!value || (<span class=\"keyword\">typeof</span> value !== <span class=\"string\">'object'</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">Object</span>.keys(value).forEach(<span class=\"function\">(<span class=\"params\">key</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> value[key] === <span class=\"string\">'object'</span>) &#123;</span><br><span class=\"line\">            observer(value[key]) <span class=\"comment\">// 递归遍历深层次属性</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        defineReactive(value, key, value[key]);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Vue</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(options) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>._data = option.data</span><br><span class=\"line\">    observer(<span class=\"keyword\">this</span>._data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    name: &#123;<span class=\"attr\">firstName</span>: <span class=\"string\">'z'</span>, <span class=\"attr\">lastName</span>: <span class=\"string\">'zz'</span>&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">vm._data.name.firstName = <span class=\"string\">'cc'</span> <span class=\"comment\">// 此时会打印 视图更新啦～</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"下面我们一步步解析以上简易版响应式系统原理\"><a href=\"#下面我们一步步解析以上简易版响应式系统原理\" class=\"headerlink\" title=\"下面我们一步步解析以上简易版响应式系统原理\"></a>下面我们一步步解析以上简易版响应式系统原理</h5><ol>\n<li>首先我们要实现一个对对象属性进行数据劫持，跟踪属性更新的函数 <code>defineReactive</code>  ， 该函数使用了 <code>Object.defineProperty</code> 进行数据劫持, 被设置的属性会在读取时触发 <code>getter</code>,  会在设置时触发 <code>setter</code>    执行里面更新视图的函数 <code>cb</code> 打印出  <em>视图更新啦～</em></li>\n</ol>\n<ol start=\"2\">\n<li>只有一个<code>defineReactive</code>还不够， 我们还需要实现一个 <code>observer</code>  来对对象所有属性遍历、递归进行绑定, 这样对象上所有属性修改时都会触发getter 、 setter。</li>\n<li>最后我们构建一个Vue 的class类， 在构造函数中初始化data，并进行<strong>[响应式]</strong> 化</li>\n<li>当实例化Vue后，我们修改_data上的值就会触发setter 更新视图</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>响应式系统最重要的就是数据劫持部分，当然这里只是一个简单的实现，像数组对象等都没处理，不过能通过这个demo了解相应式的基本原理。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"从零开始学习Vue源码-——响应式基本原理\"><a href=\"#从零开始学习Vue源码-——响应式基本原理\" class=\"headerlink\" title=\"从零开始学习Vue源码 ——响应式基本原理\"></a>从零开始学习Vue源码 ——响应式基本原理</h1><h4 id=\"这里实现一个简易版本的响应式系统来形象的理解数据是如何在初始化的时候被劫持，以及如何在修改时更新视图的。\"><a href=\"#这里实现一个简易版本的响应式系统来形象的理解数据是如何在初始化的时候被劫持，以及如何在修改时更新视图的。\" class=\"headerlink\" title=\"这里实现一个简易版本的响应式系统来形象的理解数据是如何在初始化的时候被劫持，以及如何在修改时更新视图的。\"></a>这里实现一个简易版本的响应式系统来形象的理解数据是如何在初始化的时候被劫持，以及如何在修改时更新视图的。</h4><h3 id=\"首先看下Vue2-x实现响应式系统最重要的方法\"><a href=\"#首先看下Vue2-x实现响应式系统最重要的方法\" class=\"headerlink\" title=\"首先看下Vue2.x实现响应式系统最重要的方法\"></a>首先看下Vue2.x实现响应式系统最重要的方法</h3><p><code>Object.defineProperty</code>, Vue2.x就是基于它实现的响应式</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    obj: 目标对象</span></span><br><span class=\"line\"><span class=\"comment\">    prop: 需要操作的目标对象的属性名</span></span><br><span class=\"line\"><span class=\"comment\">    descriptor: 描述符</span></span><br><span class=\"line\"><span class=\"comment\">    </span></span><br><span class=\"line\"><span class=\"comment\">    return value 传入对象</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(obj, prop, descriptor)</span><br></pre></td></tr></table></figure>\n<p>具体的属性以及使用方法可以参考<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\" target=\"_blank\" rel=\"noopener\">MDN</a></p>","more":"<h4 id=\"下面贴一个简易版响应式的代码实现\"><a href=\"#下面贴一个简易版响应式的代码实现\" class=\"headerlink\" title=\"下面贴一个简易版响应式的代码实现\"></a>下面贴一个简易版响应式的代码实现</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 更新视图时调用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cb</span> (<span class=\"params\">val</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 渲染视图 */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"视图更新啦～\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 对对象中某个属性进行数据劫持</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">defineReactive</span> (<span class=\"params\">obj, key, val</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">Object</span>.defineProperty(obj, key, &#123;</span><br><span class=\"line\">        enumerable: <span class=\"literal\">true</span>,       <span class=\"comment\">/* 属性可枚举 */</span></span><br><span class=\"line\">        configurable: <span class=\"literal\">true</span>,     <span class=\"comment\">/* 属性可被修改或删除 */</span></span><br><span class=\"line\">        get: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reactiveGetter</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> val;         <span class=\"comment\">/* 实际上会依赖收集 */</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        set: <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reactiveSetter</span> (<span class=\"params\">newVal</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (newVal === val) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            cb(newVal);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 遍历对象所有属性，进行数据劫持</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">observer</span> (<span class=\"params\">value</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!value || (<span class=\"keyword\">typeof</span> value !== <span class=\"string\">'object'</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"built_in\">Object</span>.keys(value).forEach(<span class=\"function\">(<span class=\"params\">key</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">typeof</span> value[key] === <span class=\"string\">'object'</span>) &#123;</span><br><span class=\"line\">            observer(value[key]) <span class=\"comment\">// 递归遍历深层次属性</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        defineReactive(value, key, value[key]);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Vue</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(options) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>._data = option.data</span><br><span class=\"line\">    observer(<span class=\"keyword\">this</span>._data);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> vm = <span class=\"keyword\">new</span> Vue(&#123;</span><br><span class=\"line\">  data: &#123;</span><br><span class=\"line\">    name: &#123;<span class=\"attr\">firstName</span>: <span class=\"string\">'z'</span>, <span class=\"attr\">lastName</span>: <span class=\"string\">'zz'</span>&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">vm._data.name.firstName = <span class=\"string\">'cc'</span> <span class=\"comment\">// 此时会打印 视图更新啦～</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"下面我们一步步解析以上简易版响应式系统原理\"><a href=\"#下面我们一步步解析以上简易版响应式系统原理\" class=\"headerlink\" title=\"下面我们一步步解析以上简易版响应式系统原理\"></a>下面我们一步步解析以上简易版响应式系统原理</h5><ol>\n<li>首先我们要实现一个对对象属性进行数据劫持，跟踪属性更新的函数 <code>defineReactive</code>  ， 该函数使用了 <code>Object.defineProperty</code> 进行数据劫持, 被设置的属性会在读取时触发 <code>getter</code>,  会在设置时触发 <code>setter</code>    执行里面更新视图的函数 <code>cb</code> 打印出  <em>视图更新啦～</em></li>\n</ol>\n<ol start=\"2\">\n<li>只有一个<code>defineReactive</code>还不够， 我们还需要实现一个 <code>observer</code>  来对对象所有属性遍历、递归进行绑定, 这样对象上所有属性修改时都会触发getter 、 setter。</li>\n<li>最后我们构建一个Vue 的class类， 在构造函数中初始化data，并进行<strong>[响应式]</strong> 化</li>\n<li>当实例化Vue后，我们修改_data上的值就会触发setter 更新视图</li>\n</ol>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>响应式系统最重要的就是数据劫持部分，当然这里只是一个简单的实现，像数组对象等都没处理，不过能通过这个demo了解相应式的基本原理。</p>"},{"title":"css3 水位图波纹动效","date":"2020-07-20T14:57:23.000Z","_content":"\n\n\n# 水波纹动效\n\n\n\n直接上代码\n\n\n\n通过遮罩和动画实现水位图波纹特效\n\n\n\n可以通过输入0-100的数字或者 拖动滑动条调节水位的高低 (通过修改wave-mask的top)\n\n<!-- more -->\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Document</title>\n    <style>\n      * {\n        box-sizing: border-box;\n        padding: 0;\n        margin: 0;\n      }\n      .container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        border-radius: 50%;\n        border: 3px solid #67c23a;\n        background: #ffffff;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        padding: 7px 7px;\n        overflow: hidden;\n      }\n      .wave {\n        position: relative;\n        width: 100px;\n        height: 100px;\n        background-image: linear-gradient(-180deg, #aaff80 13%, #67c23a 91%);\n        border-radius: 50%;\n        box-shadow: 1px 3px 3px 0 rgba(139, 139, 139, 0.822);\n      }\n      .wave-mask {\n        position: absolute;\n        width: 200px;\n        height: 200px;\n        top: 100%;\n        left: 50%;\n        border-radius: 39%;\n        background-color: white;\n        transform: translate(-50%, -100%) rotate(0);\n        animation: toRotate 10s linear infinite;\n        z-index: 20;\n      }\n\n      @keyframes toRotate {\n        50% {\n          transform: translate(-50%, -100%) rotate(180deg);\n        }\n        100% {\n          transform: translate(-50%, -100%) rotate(360deg);\n        }\n      }\n      .tips {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: 50px;\n        height: 50px;\n        transform: translate(-25px, -25px);\n        text-align: center;\n        line-height: 50px;\n        z-index: 30;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"wave\"></div>\n      <div class=\"wave-mask\"></div>\n      <div class=\"tips\">0%</div>\n    </div>\n\n    <div style=\"display: flex; justify-content: center; align-items: center; margin-top: 200px;\">\n      <input type=\"number\" step=\"5\">\n      <button style=\"margin-left: 20px;\" id=\"btn\">按钮</button>\n      <input style=\"margin-left: 40px;\" id=\"range\" type=\"range\" min=\"0\" max=\"100\" step=\"5\" value=\"0\" />\n    </div>\n    <script>\n      let btn = document.getElementById('btn')\n      let mask = document.getElementsByClassName('wave-mask')[0]\n      let ipt = document.getElementsByTagName('input')[0]\n      let tips = document.getElementsByClassName('tips')[0]\n      let range = document.getElementById('range')\n\n      btn.onclick = function(e) {\n        let value = (100 - +ipt.value)\n        mask.style.top = value + '%'\n        tips.innerHTML = ipt.value + '%'\n      }\n\n      range.onchange = function(e) {\n        let value = (100 - +e.target.value)\n        mask.style.top = value + '%'\n        tips.innerHTML = e.target.value + '%'\n      }\n    </script>\n  </body>\n</html>\n\n```\n\n","source":"_posts/水波纹动效.md","raw":"---\ntitle: css3 水位图波纹动效\ndate: 2020-07-20 22:57:23\ncategories:\n - css\ntags:\n - css\n---\n\n\n\n# 水波纹动效\n\n\n\n直接上代码\n\n\n\n通过遮罩和动画实现水位图波纹特效\n\n\n\n可以通过输入0-100的数字或者 拖动滑动条调节水位的高低 (通过修改wave-mask的top)\n\n<!-- more -->\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Document</title>\n    <style>\n      * {\n        box-sizing: border-box;\n        padding: 0;\n        margin: 0;\n      }\n      .container {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        border-radius: 50%;\n        border: 3px solid #67c23a;\n        background: #ffffff;\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        padding: 7px 7px;\n        overflow: hidden;\n      }\n      .wave {\n        position: relative;\n        width: 100px;\n        height: 100px;\n        background-image: linear-gradient(-180deg, #aaff80 13%, #67c23a 91%);\n        border-radius: 50%;\n        box-shadow: 1px 3px 3px 0 rgba(139, 139, 139, 0.822);\n      }\n      .wave-mask {\n        position: absolute;\n        width: 200px;\n        height: 200px;\n        top: 100%;\n        left: 50%;\n        border-radius: 39%;\n        background-color: white;\n        transform: translate(-50%, -100%) rotate(0);\n        animation: toRotate 10s linear infinite;\n        z-index: 20;\n      }\n\n      @keyframes toRotate {\n        50% {\n          transform: translate(-50%, -100%) rotate(180deg);\n        }\n        100% {\n          transform: translate(-50%, -100%) rotate(360deg);\n        }\n      }\n      .tips {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        width: 50px;\n        height: 50px;\n        transform: translate(-25px, -25px);\n        text-align: center;\n        line-height: 50px;\n        z-index: 30;\n      }\n    </style>\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"wave\"></div>\n      <div class=\"wave-mask\"></div>\n      <div class=\"tips\">0%</div>\n    </div>\n\n    <div style=\"display: flex; justify-content: center; align-items: center; margin-top: 200px;\">\n      <input type=\"number\" step=\"5\">\n      <button style=\"margin-left: 20px;\" id=\"btn\">按钮</button>\n      <input style=\"margin-left: 40px;\" id=\"range\" type=\"range\" min=\"0\" max=\"100\" step=\"5\" value=\"0\" />\n    </div>\n    <script>\n      let btn = document.getElementById('btn')\n      let mask = document.getElementsByClassName('wave-mask')[0]\n      let ipt = document.getElementsByTagName('input')[0]\n      let tips = document.getElementsByClassName('tips')[0]\n      let range = document.getElementById('range')\n\n      btn.onclick = function(e) {\n        let value = (100 - +ipt.value)\n        mask.style.top = value + '%'\n        tips.innerHTML = ipt.value + '%'\n      }\n\n      range.onchange = function(e) {\n        let value = (100 - +e.target.value)\n        mask.style.top = value + '%'\n        tips.innerHTML = e.target.value + '%'\n      }\n    </script>\n  </body>\n</html>\n\n```\n\n","slug":"水波纹动效","published":1,"updated":"2020-07-20T14:58:46.375Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckgwfy6dz000kkqulmav34wiq","content":"<h1 id=\"水波纹动效\"><a href=\"#水波纹动效\" class=\"headerlink\" title=\"水波纹动效\"></a>水波纹动效</h1><p>直接上代码</p>\n<p>通过遮罩和动画实现水位图波纹特效</p>\n<p>可以通过输入0-100的数字或者 拖动滑动条调节水位的高低 (通过修改wave-mask的top)</p>\n<a id=\"more\"></a>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      * &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        box-sizing: border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">        padding: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">        margin: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.container</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">        justify-content: center;</span></span><br><span class=\"line\"><span class=\"undefined\">        align-items: center;</span></span><br><span class=\"line\"><span class=\"undefined\">        border-radius: 50%;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">border</span>: 3<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#67c23a</span>;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#ffffff</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">        position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">        top: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">        left: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">        transform: translate(-50%, -50%);</span></span><br><span class=\"line\"><span class=\"undefined\">        padding: 7px 7px;</span></span><br><span class=\"line\"><span class=\"undefined\">        overflow: hidden;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wave</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        position: relative;</span></span><br><span class=\"line\"><span class=\"undefined\">        width: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">        height: 100px;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">background-image</span>: <span class=\"selector-tag\">linear-gradient</span>(<span class=\"selector-tag\">-180deg</span>, <span class=\"selector-id\">#aaff80</span> 13%, <span class=\"selector-id\">#67c23a</span> 91%);</span></span><br><span class=\"line\"><span class=\"undefined\">        border-radius: 50%;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">box-shadow</span>: 1<span class=\"selector-tag\">px</span> 3<span class=\"selector-tag\">px</span> 3<span class=\"selector-tag\">px</span> 0 <span class=\"selector-tag\">rgba</span>(139, 139, 139, 0<span class=\"selector-class\">.822</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wave-mask</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">        width: 200px;</span></span><br><span class=\"line\"><span class=\"undefined\">        height: 200px;</span></span><br><span class=\"line\"><span class=\"undefined\">        top: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">        left: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">        border-radius: 39%;</span></span><br><span class=\"line\"><span class=\"undefined\">        background-color: white;</span></span><br><span class=\"line\"><span class=\"undefined\">        transform: translate(-50%, -100%) rotate(0);</span></span><br><span class=\"line\"><span class=\"undefined\">        animation: toRotate 10s linear infinite;</span></span><br><span class=\"line\"><span class=\"undefined\">        z-index: 20;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">      @<span class=\"keyword\">keyframes</span> toRotate &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        50% &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          transform: translate(-50%, -100%) rotate(180deg);</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        100% &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          transform: translate(-50%, -100%) rotate(360deg);</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.tips</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">        top: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">        left: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">        width: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        height: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        transform: translate(-25px, -25px);</span></span><br><span class=\"line\"><span class=\"undefined\">        text-align: center;</span></span><br><span class=\"line\"><span class=\"undefined\">        line-height: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        z-index: 30;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wave\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wave-mask\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tips\"</span>&gt;</span>0%<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"display: flex; justify-content: center; align-items: center; margin-top: 200px;\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"number\"</span> <span class=\"attr\">step</span>=<span class=\"string\">\"5\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-left: 20px;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-left: 40px;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">max</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">step</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'btn'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> mask = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">'wave-mask'</span>)[<span class=\"number\">0</span>]</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> ipt = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'input'</span>)[<span class=\"number\">0</span>]</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> tips = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">'tips'</span>)[<span class=\"number\">0</span>]</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> range = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'range'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">      btn.onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> value = (<span class=\"number\">100</span> - +ipt.value)</span></span><br><span class=\"line\"><span class=\"javascript\">        mask.style.top = value + <span class=\"string\">'%'</span></span></span><br><span class=\"line\"><span class=\"javascript\">        tips.innerHTML = ipt.value + <span class=\"string\">'%'</span></span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">      range.onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> value = (<span class=\"number\">100</span> - +e.target.value)</span></span><br><span class=\"line\"><span class=\"javascript\">        mask.style.top = value + <span class=\"string\">'%'</span></span></span><br><span class=\"line\"><span class=\"javascript\">        tips.innerHTML = e.target.value + <span class=\"string\">'%'</span></span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"水波纹动效\"><a href=\"#水波纹动效\" class=\"headerlink\" title=\"水波纹动效\"></a>水波纹动效</h1><p>直接上代码</p>\n<p>通过遮罩和动画实现水位图波纹特效</p>\n<p>可以通过输入0-100的数字或者 拖动滑动条调节水位的高低 (通过修改wave-mask的top)</p>","more":"<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1.0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Document<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">      * &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        box-sizing: border-box;</span></span><br><span class=\"line\"><span class=\"undefined\">        padding: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">        margin: 0;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.container</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        display: flex;</span></span><br><span class=\"line\"><span class=\"undefined\">        justify-content: center;</span></span><br><span class=\"line\"><span class=\"undefined\">        align-items: center;</span></span><br><span class=\"line\"><span class=\"undefined\">        border-radius: 50%;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">border</span>: 3<span class=\"selector-tag\">px</span> <span class=\"selector-tag\">solid</span> <span class=\"selector-id\">#67c23a</span>;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">background</span>: <span class=\"selector-id\">#ffffff</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">        position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">        top: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">        left: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">        transform: translate(-50%, -50%);</span></span><br><span class=\"line\"><span class=\"undefined\">        padding: 7px 7px;</span></span><br><span class=\"line\"><span class=\"undefined\">        overflow: hidden;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wave</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        position: relative;</span></span><br><span class=\"line\"><span class=\"undefined\">        width: 100px;</span></span><br><span class=\"line\"><span class=\"undefined\">        height: 100px;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">background-image</span>: <span class=\"selector-tag\">linear-gradient</span>(<span class=\"selector-tag\">-180deg</span>, <span class=\"selector-id\">#aaff80</span> 13%, <span class=\"selector-id\">#67c23a</span> 91%);</span></span><br><span class=\"line\"><span class=\"undefined\">        border-radius: 50%;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"selector-tag\">box-shadow</span>: 1<span class=\"selector-tag\">px</span> 3<span class=\"selector-tag\">px</span> 3<span class=\"selector-tag\">px</span> 0 <span class=\"selector-tag\">rgba</span>(139, 139, 139, 0<span class=\"selector-class\">.822</span>);</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.wave-mask</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">        width: 200px;</span></span><br><span class=\"line\"><span class=\"undefined\">        height: 200px;</span></span><br><span class=\"line\"><span class=\"undefined\">        top: 100%;</span></span><br><span class=\"line\"><span class=\"undefined\">        left: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">        border-radius: 39%;</span></span><br><span class=\"line\"><span class=\"undefined\">        background-color: white;</span></span><br><span class=\"line\"><span class=\"undefined\">        transform: translate(-50%, -100%) rotate(0);</span></span><br><span class=\"line\"><span class=\"undefined\">        animation: toRotate 10s linear infinite;</span></span><br><span class=\"line\"><span class=\"undefined\">        z-index: 20;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"css\">      @<span class=\"keyword\">keyframes</span> toRotate &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        50% &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          transform: translate(-50%, -100%) rotate(180deg);</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">        100% &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">          transform: translate(-50%, -100%) rotate(360deg);</span></span><br><span class=\"line\"><span class=\"undefined\">        &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"css\">      <span class=\"selector-class\">.tips</span> &#123;</span></span><br><span class=\"line\"><span class=\"undefined\">        position: absolute;</span></span><br><span class=\"line\"><span class=\"undefined\">        top: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">        left: 50%;</span></span><br><span class=\"line\"><span class=\"undefined\">        width: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        height: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        transform: translate(-25px, -25px);</span></span><br><span class=\"line\"><span class=\"undefined\">        text-align: center;</span></span><br><span class=\"line\"><span class=\"undefined\">        line-height: 50px;</span></span><br><span class=\"line\"><span class=\"undefined\">        z-index: 30;</span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wave\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"wave-mask\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"tips\"</span>&gt;</span>0%<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">style</span>=<span class=\"string\">\"display: flex; justify-content: center; align-items: center; margin-top: 200px;\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"number\"</span> <span class=\"attr\">step</span>=<span class=\"string\">\"5\"</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-left: 20px;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span>&gt;</span>按钮<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">style</span>=<span class=\"string\">\"margin-left: 40px;\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"range\"</span> <span class=\"attr\">min</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">max</span>=<span class=\"string\">\"100\"</span> <span class=\"attr\">step</span>=<span class=\"string\">\"5\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"0\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> btn = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'btn'</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> mask = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">'wave-mask'</span>)[<span class=\"number\">0</span>]</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> ipt = <span class=\"built_in\">document</span>.getElementsByTagName(<span class=\"string\">'input'</span>)[<span class=\"number\">0</span>]</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> tips = <span class=\"built_in\">document</span>.getElementsByClassName(<span class=\"string\">'tips'</span>)[<span class=\"number\">0</span>]</span></span><br><span class=\"line\"><span class=\"javascript\">      <span class=\"keyword\">let</span> range = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'range'</span>)</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">      btn.onclick = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> value = (<span class=\"number\">100</span> - +ipt.value)</span></span><br><span class=\"line\"><span class=\"javascript\">        mask.style.top = value + <span class=\"string\">'%'</span></span></span><br><span class=\"line\"><span class=\"javascript\">        tips.innerHTML = ipt.value + <span class=\"string\">'%'</span></span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\">      range.onchange = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>) </span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\">        <span class=\"keyword\">let</span> value = (<span class=\"number\">100</span> - +e.target.value)</span></span><br><span class=\"line\"><span class=\"javascript\">        mask.style.top = value + <span class=\"string\">'%'</span></span></span><br><span class=\"line\"><span class=\"javascript\">        tips.innerHTML = e.target.value + <span class=\"string\">'%'</span></span></span><br><span class=\"line\"><span class=\"undefined\">      &#125;</span></span><br><span class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"ckgwfy6db0000kqulq3ega3ev","category_id":"ckgwfy6di0004kqulkpfvcg10","_id":"ckgwfy6dw000fkqulpv8qhnsk"},{"post_id":"ckgwfy6dn0008kqultpjpjnuv","category_id":"ckgwfy6di0004kqulkpfvcg10","_id":"ckgwfy6dy000ikqulvwx5hhog"},{"post_id":"ckgwfy6dr000ckquly4wguliw","category_id":"ckgwfy6di0004kqulkpfvcg10","_id":"ckgwfy6e0000mkqul0lmor3s4"},{"post_id":"ckgwfy6dl0006kqul7sgesb1k","category_id":"ckgwfy6di0004kqulkpfvcg10","_id":"ckgwfy6e1000okqulkd1qp9el"},{"post_id":"ckgwfy6dm0007kqulq5y2mts2","category_id":"ckgwfy6e0000lkquljx5xfwko","_id":"ckgwfy6e2000skqulpnimjqub"},{"post_id":"ckgwfy6df0002kqulnyk2mw0y","category_id":"ckgwfy6di0004kqulkpfvcg10","_id":"ckgwfy6e2000wkqulycfj96hx"},{"post_id":"ckgwfy6df0002kqulnyk2mw0y","category_id":"ckgwfy6e1000pkquls1hrcr5t","_id":"ckgwfy6e3000zkqul0g735hrx"},{"post_id":"ckgwfy6du000dkqulxoit30mh","category_id":"ckgwfy6di0004kqulkpfvcg10","_id":"ckgwfy6e40012kqultmqnlgby"},{"post_id":"ckgwfy6du000dkqulxoit30mh","category_id":"ckgwfy6e2000tkqulcmbew2j3","_id":"ckgwfy6e50015kqulxvv3xe3k"},{"post_id":"ckgwfy6dx000hkqul3vb38fyp","category_id":"ckgwfy6di0004kqulkpfvcg10","_id":"ckgwfy6e50017kqulndhgpc0w"},{"post_id":"ckgwfy6dx000hkqul3vb38fyp","category_id":"ckgwfy6e2000tkqulcmbew2j3","_id":"ckgwfy6e50018kqullcizw8e6"},{"post_id":"ckgwfy6dz000kkqulmav34wiq","category_id":"ckgwfy6e0000lkquljx5xfwko","_id":"ckgwfy6e6001bkqul3q8etjix"}],"PostTag":[{"post_id":"ckgwfy6db0000kqulq3ega3ev","tag_id":"ckgwfy6dk0005kqulsecactc0","_id":"ckgwfy6dr000bkqulsg5xrx9l"},{"post_id":"ckgwfy6df0002kqulnyk2mw0y","tag_id":"ckgwfy6do000akqul0vg3eqxk","_id":"ckgwfy6dy000jkqulewnupf9h"},{"post_id":"ckgwfy6dl0006kqul7sgesb1k","tag_id":"ckgwfy6dx000gkqulx8qn2b2k","_id":"ckgwfy6e1000rkqul367nqutt"},{"post_id":"ckgwfy6dl0006kqul7sgesb1k","tag_id":"ckgwfy6e0000nkquli7o1apqg","_id":"ckgwfy6e2000ukquluwtbm697"},{"post_id":"ckgwfy6dm0007kqulq5y2mts2","tag_id":"ckgwfy6e1000qkqul5jovudc8","_id":"ckgwfy6e30010kqulszvj8skm"},{"post_id":"ckgwfy6dm0007kqulq5y2mts2","tag_id":"ckgwfy6e2000vkqulweopcb2m","_id":"ckgwfy6e40013kqulgmn7qinx"},{"post_id":"ckgwfy6dn0008kqultpjpjnuv","tag_id":"ckgwfy6e3000ykqull7da2des","_id":"ckgwfy6e50016kqulchis6e9i"},{"post_id":"ckgwfy6dr000ckquly4wguliw","tag_id":"ckgwfy6e40014kqul7n2zbeq4","_id":"ckgwfy6e5001akqulairihexp"},{"post_id":"ckgwfy6du000dkqulxoit30mh","tag_id":"ckgwfy6e50019kqula9oky5wo","_id":"ckgwfy6e6001dkqulv31sorvd"},{"post_id":"ckgwfy6dx000hkqul3vb38fyp","tag_id":"ckgwfy6e50019kqula9oky5wo","_id":"ckgwfy6e7001fkqulhcdgwspi"},{"post_id":"ckgwfy6dz000kkqulmav34wiq","tag_id":"ckgwfy6e7001ekquldlo1d2t2","_id":"ckgwfy6e7001gkqulhqe08t4k"}],"Tag":[{"name":"blob","_id":"ckgwfy6dk0005kqulsecactc0"},{"name":"react","_id":"ckgwfy6do000akqul0vg3eqxk"},{"name":"i18n","_id":"ckgwfy6dx000gkqulx8qn2b2k"},{"name":"nuxt","_id":"ckgwfy6e0000nkquli7o1apqg"},{"name":"前端","_id":"ckgwfy6e1000qkqul5jovudc8"},{"name":"css技巧","_id":"ckgwfy6e2000vkqulweopcb2m"},{"name":"summary","_id":"ckgwfy6e3000ykqull7da2des"},{"name":"algorithm","_id":"ckgwfy6e40014kqul7n2zbeq4"},{"name":"vue","_id":"ckgwfy6e50019kqula9oky5wo"},{"name":"css","_id":"ckgwfy6e7001ekquldlo1d2t2"}]}}